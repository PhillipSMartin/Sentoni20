//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SentoniClient {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AccountDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AccountDataSet : global::System.Data.DataSet {
        
        private PortfolioDataTable tablePortfolio;
        
        private BlotterDataTable tableBlotter;
        
        private AccountDataDataTable tableAccountData;
        
        private IndicesDataTable tableIndices;
        
        private AccountSummaryDataTable tableAccountSummary;
        
        private StressTestDataTable tableStressTest;
        
        private StressTestSummaryDataTable tableStressTestSummary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AccountDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AccountDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Portfolio"] != null)) {
                    base.Tables.Add(new PortfolioDataTable(ds.Tables["Portfolio"]));
                }
                if ((ds.Tables["Blotter"] != null)) {
                    base.Tables.Add(new BlotterDataTable(ds.Tables["Blotter"]));
                }
                if ((ds.Tables["AccountData"] != null)) {
                    base.Tables.Add(new AccountDataDataTable(ds.Tables["AccountData"]));
                }
                if ((ds.Tables["Indices"] != null)) {
                    base.Tables.Add(new IndicesDataTable(ds.Tables["Indices"]));
                }
                if ((ds.Tables["AccountSummary"] != null)) {
                    base.Tables.Add(new AccountSummaryDataTable(ds.Tables["AccountSummary"]));
                }
                if ((ds.Tables["StressTest"] != null)) {
                    base.Tables.Add(new StressTestDataTable(ds.Tables["StressTest"]));
                }
                if ((ds.Tables["StressTestSummary"] != null)) {
                    base.Tables.Add(new StressTestSummaryDataTable(ds.Tables["StressTestSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PortfolioDataTable Portfolio {
            get {
                return this.tablePortfolio;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BlotterDataTable Blotter {
            get {
                return this.tableBlotter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccountDataDataTable AccountData {
            get {
                return this.tableAccountData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IndicesDataTable Indices {
            get {
                return this.tableIndices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccountSummaryDataTable AccountSummary {
            get {
                return this.tableAccountSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StressTestDataTable StressTest {
            get {
                return this.tableStressTest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StressTestSummaryDataTable StressTestSummary {
            get {
                return this.tableStressTestSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AccountDataSet cln = ((AccountDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Portfolio"] != null)) {
                    base.Tables.Add(new PortfolioDataTable(ds.Tables["Portfolio"]));
                }
                if ((ds.Tables["Blotter"] != null)) {
                    base.Tables.Add(new BlotterDataTable(ds.Tables["Blotter"]));
                }
                if ((ds.Tables["AccountData"] != null)) {
                    base.Tables.Add(new AccountDataDataTable(ds.Tables["AccountData"]));
                }
                if ((ds.Tables["Indices"] != null)) {
                    base.Tables.Add(new IndicesDataTable(ds.Tables["Indices"]));
                }
                if ((ds.Tables["AccountSummary"] != null)) {
                    base.Tables.Add(new AccountSummaryDataTable(ds.Tables["AccountSummary"]));
                }
                if ((ds.Tables["StressTest"] != null)) {
                    base.Tables.Add(new StressTestDataTable(ds.Tables["StressTest"]));
                }
                if ((ds.Tables["StressTestSummary"] != null)) {
                    base.Tables.Add(new StressTestSummaryDataTable(ds.Tables["StressTestSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePortfolio = ((PortfolioDataTable)(base.Tables["Portfolio"]));
            if ((initTable == true)) {
                if ((this.tablePortfolio != null)) {
                    this.tablePortfolio.InitVars();
                }
            }
            this.tableBlotter = ((BlotterDataTable)(base.Tables["Blotter"]));
            if ((initTable == true)) {
                if ((this.tableBlotter != null)) {
                    this.tableBlotter.InitVars();
                }
            }
            this.tableAccountData = ((AccountDataDataTable)(base.Tables["AccountData"]));
            if ((initTable == true)) {
                if ((this.tableAccountData != null)) {
                    this.tableAccountData.InitVars();
                }
            }
            this.tableIndices = ((IndicesDataTable)(base.Tables["Indices"]));
            if ((initTable == true)) {
                if ((this.tableIndices != null)) {
                    this.tableIndices.InitVars();
                }
            }
            this.tableAccountSummary = ((AccountSummaryDataTable)(base.Tables["AccountSummary"]));
            if ((initTable == true)) {
                if ((this.tableAccountSummary != null)) {
                    this.tableAccountSummary.InitVars();
                }
            }
            this.tableStressTest = ((StressTestDataTable)(base.Tables["StressTest"]));
            if ((initTable == true)) {
                if ((this.tableStressTest != null)) {
                    this.tableStressTest.InitVars();
                }
            }
            this.tableStressTestSummary = ((StressTestSummaryDataTable)(base.Tables["StressTestSummary"]));
            if ((initTable == true)) {
                if ((this.tableStressTestSummary != null)) {
                    this.tableStressTestSummary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AccountDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AccountDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePortfolio = new PortfolioDataTable();
            base.Tables.Add(this.tablePortfolio);
            this.tableBlotter = new BlotterDataTable();
            base.Tables.Add(this.tableBlotter);
            this.tableAccountData = new AccountDataDataTable();
            base.Tables.Add(this.tableAccountData);
            this.tableIndices = new IndicesDataTable();
            base.Tables.Add(this.tableIndices);
            this.tableAccountSummary = new AccountSummaryDataTable();
            base.Tables.Add(this.tableAccountSummary);
            this.tableStressTest = new StressTestDataTable();
            base.Tables.Add(this.tableStressTest);
            this.tableStressTestSummary = new StressTestSummaryDataTable();
            base.Tables.Add(this.tableStressTestSummary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePortfolio() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBlotter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAccountData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeIndices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAccountSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStressTest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStressTestSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AccountDataSet ds = new AccountDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PortfolioRowChangeEventHandler(object sender, PortfolioRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BlotterRowChangeEventHandler(object sender, BlotterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AccountDataRowChangeEventHandler(object sender, AccountDataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void IndicesRowChangeEventHandler(object sender, IndicesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AccountSummaryRowChangeEventHandler(object sender, AccountSummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StressTestRowChangeEventHandler(object sender, StressTestRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StressTestSummaryRowChangeEventHandler(object sender, StressTestSummaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PortfolioDataTable : global::System.Data.TypedTableBase<PortfolioRow> {
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnSymbol;
            
            private global::System.Data.DataColumn columnSOD_Position;
            
            private global::System.Data.DataColumn columnSOD_Price;
            
            private global::System.Data.DataColumn columnSOD_Market_Value;
            
            private global::System.Data.DataColumn columnChange_in_Position;
            
            private global::System.Data.DataColumn columnChange_in_Cost;
            
            private global::System.Data.DataColumn columnCurrent_Position;
            
            private global::System.Data.DataColumn columnCurrent_Price;
            
            private global::System.Data.DataColumn columnCurrent_Cost;
            
            private global::System.Data.DataColumn columnCurrent_Market_Value;
            
            private global::System.Data.DataColumn columnP_and_L;
            
            private global::System.Data.DataColumn columnOpen;
            
            private global::System.Data.DataColumn columnPrevClose;
            
            private global::System.Data.DataColumn columnLastPrice;
            
            private global::System.Data.DataColumn columnBid;
            
            private global::System.Data.DataColumn columnAsk;
            
            private global::System.Data.DataColumn columnMid;
            
            private global::System.Data.DataColumn columnClosed;
            
            private global::System.Data.DataColumn columnClosingPrice;
            
            private global::System.Data.DataColumn columnDelta;
            
            private global::System.Data.DataColumn columnGamma;
            
            private global::System.Data.DataColumn columnTheta;
            
            private global::System.Data.DataColumn columnVega;
            
            private global::System.Data.DataColumn columnImpliedVol;
            
            private global::System.Data.DataColumn columnDeltaUSD;
            
            private global::System.Data.DataColumn columnGammaUSD;
            
            private global::System.Data.DataColumn column100DeltaUSD;
            
            private global::System.Data.DataColumn columnThetaAnnualized;
            
            private global::System.Data.DataColumn columnTimePremium;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionType;
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            private global::System.Data.DataColumn columnIsStock;
            
            private global::System.Data.DataColumn columnIsOption;
            
            private global::System.Data.DataColumn columnIsFuture;
            
            private global::System.Data.DataColumn columnIsOutOfBounds;
            
            private global::System.Data.DataColumn columnSubscriptionStatus;
            
            private global::System.Data.DataColumn columnUpdateTime;
            
            private global::System.Data.DataColumn columnPerformance;
            
            private global::System.Data.DataColumn columnNettingAdjustment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioDataTable() {
                this.TableName = "Portfolio";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PortfolioDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PortfolioDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolColumn {
                get {
                    return this.columnSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOD_PositionColumn {
                get {
                    return this.columnSOD_Position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOD_PriceColumn {
                get {
                    return this.columnSOD_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOD_Market_ValueColumn {
                get {
                    return this.columnSOD_Market_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Change_in_PositionColumn {
                get {
                    return this.columnChange_in_Position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Change_in_CostColumn {
                get {
                    return this.columnChange_in_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_PositionColumn {
                get {
                    return this.columnCurrent_Position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_PriceColumn {
                get {
                    return this.columnCurrent_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_CostColumn {
                get {
                    return this.columnCurrent_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_Market_ValueColumn {
                get {
                    return this.columnCurrent_Market_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P_and_LColumn {
                get {
                    return this.columnP_and_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpenColumn {
                get {
                    return this.columnOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevCloseColumn {
                get {
                    return this.columnPrevClose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPriceColumn {
                get {
                    return this.columnLastPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BidColumn {
                get {
                    return this.columnBid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AskColumn {
                get {
                    return this.columnAsk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MidColumn {
                get {
                    return this.columnMid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosedColumn {
                get {
                    return this.columnClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingPriceColumn {
                get {
                    return this.columnClosingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeltaColumn {
                get {
                    return this.columnDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GammaColumn {
                get {
                    return this.columnGamma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThetaColumn {
                get {
                    return this.columnTheta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VegaColumn {
                get {
                    return this.columnVega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImpliedVolColumn {
                get {
                    return this.columnImpliedVol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeltaUSDColumn {
                get {
                    return this.columnDeltaUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GammaUSDColumn {
                get {
                    return this.columnGammaUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _100DeltaUSDColumn {
                get {
                    return this.column100DeltaUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThetaAnnualizedColumn {
                get {
                    return this.columnThetaAnnualized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimePremiumColumn {
                get {
                    return this.columnTimePremium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeColumn {
                get {
                    return this.columnOptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsStockColumn {
                get {
                    return this.columnIsStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOptionColumn {
                get {
                    return this.columnIsOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsFutureColumn {
                get {
                    return this.columnIsFuture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOutOfBoundsColumn {
                get {
                    return this.columnIsOutOfBounds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubscriptionStatusColumn {
                get {
                    return this.columnSubscriptionStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTimeColumn {
                get {
                    return this.columnUpdateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerformanceColumn {
                get {
                    return this.columnPerformance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NettingAdjustmentColumn {
                get {
                    return this.columnNettingAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioRow this[int index] {
                get {
                    return ((PortfolioRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioRowChangeEventHandler PortfolioRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioRowChangeEventHandler PortfolioRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioRowChangeEventHandler PortfolioRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioRowChangeEventHandler PortfolioRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPortfolioRow(PortfolioRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioRow AddPortfolioRow(
                        string AccountName, 
                        string Symbol, 
                        int SOD_Position, 
                        double SOD_Price, 
                        double SOD_Market_Value, 
                        int Change_in_Position, 
                        double Change_in_Cost, 
                        int Current_Position, 
                        double Current_Price, 
                        double Current_Cost, 
                        double Current_Market_Value, 
                        double P_and_L, 
                        double Open, 
                        double PrevClose, 
                        double LastPrice, 
                        double Bid, 
                        double Ask, 
                        double Mid, 
                        bool Closed, 
                        double ClosingPrice, 
                        double Delta, 
                        double Gamma, 
                        double Theta, 
                        double Vega, 
                        double ImpliedVol, 
                        double DeltaUSD, 
                        double GammaUSD, 
                        double _100DeltaUSD, 
                        double ThetaAnnualized, 
                        double TimePremium, 
                        System.DateTime ExpirationDate, 
                        decimal StrikePrice, 
                        string OptionType, 
                        string UnderlyingSymbol, 
                        short Multiplier, 
                        bool IsStock, 
                        bool IsOption, 
                        bool IsFuture, 
                        bool IsOutOfBounds, 
                        string SubscriptionStatus, 
                        System.TimeSpan UpdateTime, 
                        double Performance, 
                        int NettingAdjustment) {
                PortfolioRow rowPortfolioRow = ((PortfolioRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountName,
                        Symbol,
                        SOD_Position,
                        SOD_Price,
                        SOD_Market_Value,
                        Change_in_Position,
                        Change_in_Cost,
                        Current_Position,
                        Current_Price,
                        Current_Cost,
                        Current_Market_Value,
                        P_and_L,
                        Open,
                        PrevClose,
                        LastPrice,
                        Bid,
                        Ask,
                        Mid,
                        Closed,
                        ClosingPrice,
                        Delta,
                        Gamma,
                        Theta,
                        Vega,
                        ImpliedVol,
                        DeltaUSD,
                        GammaUSD,
                        _100DeltaUSD,
                        ThetaAnnualized,
                        TimePremium,
                        ExpirationDate,
                        StrikePrice,
                        OptionType,
                        UnderlyingSymbol,
                        Multiplier,
                        IsStock,
                        IsOption,
                        IsFuture,
                        IsOutOfBounds,
                        SubscriptionStatus,
                        UpdateTime,
                        Performance,
                        NettingAdjustment};
                rowPortfolioRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPortfolioRow);
                return rowPortfolioRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioRow FindByAccountNameSymbol(string AccountName, string Symbol) {
                return ((PortfolioRow)(this.Rows.Find(new object[] {
                            AccountName,
                            Symbol})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PortfolioDataTable cln = ((PortfolioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PortfolioDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccountName = base.Columns["AccountName"];
                this.columnSymbol = base.Columns["Symbol"];
                this.columnSOD_Position = base.Columns["SOD Position"];
                this.columnSOD_Price = base.Columns["SOD Price"];
                this.columnSOD_Market_Value = base.Columns["SOD Market Value"];
                this.columnChange_in_Position = base.Columns["Change in Position"];
                this.columnChange_in_Cost = base.Columns["Change in Cost"];
                this.columnCurrent_Position = base.Columns["Current Position"];
                this.columnCurrent_Price = base.Columns["Current Price"];
                this.columnCurrent_Cost = base.Columns["Current Cost"];
                this.columnCurrent_Market_Value = base.Columns["Current Market Value"];
                this.columnP_and_L = base.Columns["P and L"];
                this.columnOpen = base.Columns["Open"];
                this.columnPrevClose = base.Columns["PrevClose"];
                this.columnLastPrice = base.Columns["LastPrice"];
                this.columnBid = base.Columns["Bid"];
                this.columnAsk = base.Columns["Ask"];
                this.columnMid = base.Columns["Mid"];
                this.columnClosed = base.Columns["Closed"];
                this.columnClosingPrice = base.Columns["ClosingPrice"];
                this.columnDelta = base.Columns["Delta"];
                this.columnGamma = base.Columns["Gamma"];
                this.columnTheta = base.Columns["Theta"];
                this.columnVega = base.Columns["Vega"];
                this.columnImpliedVol = base.Columns["ImpliedVol"];
                this.columnDeltaUSD = base.Columns["DeltaUSD"];
                this.columnGammaUSD = base.Columns["GammaUSD"];
                this.column100DeltaUSD = base.Columns["100DeltaUSD"];
                this.columnThetaAnnualized = base.Columns["ThetaAnnualized"];
                this.columnTimePremium = base.Columns["TimePremium"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionType = base.Columns["OptionType"];
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnMultiplier = base.Columns["Multiplier"];
                this.columnIsStock = base.Columns["IsStock"];
                this.columnIsOption = base.Columns["IsOption"];
                this.columnIsFuture = base.Columns["IsFuture"];
                this.columnIsOutOfBounds = base.Columns["IsOutOfBounds"];
                this.columnSubscriptionStatus = base.Columns["SubscriptionStatus"];
                this.columnUpdateTime = base.Columns["UpdateTime"];
                this.columnPerformance = base.Columns["Performance"];
                this.columnNettingAdjustment = base.Columns["NettingAdjustment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnSymbol = new global::System.Data.DataColumn("Symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbol);
                this.columnSOD_Position = new global::System.Data.DataColumn("SOD Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOD_Position);
                this.columnSOD_Price = new global::System.Data.DataColumn("SOD Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOD_Price);
                this.columnSOD_Market_Value = new global::System.Data.DataColumn("SOD Market Value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOD_Market_Value);
                this.columnChange_in_Position = new global::System.Data.DataColumn("Change in Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_in_Position);
                this.columnChange_in_Cost = new global::System.Data.DataColumn("Change in Cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_in_Cost);
                this.columnCurrent_Position = new global::System.Data.DataColumn("Current Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Position);
                this.columnCurrent_Price = new global::System.Data.DataColumn("Current Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Price);
                this.columnCurrent_Cost = new global::System.Data.DataColumn("Current Cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Cost);
                this.columnCurrent_Market_Value = new global::System.Data.DataColumn("Current Market Value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Market_Value);
                this.columnP_and_L = new global::System.Data.DataColumn("P and L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_and_L);
                this.columnOpen = new global::System.Data.DataColumn("Open", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpen);
                this.columnPrevClose = new global::System.Data.DataColumn("PrevClose", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevClose);
                this.columnLastPrice = new global::System.Data.DataColumn("LastPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPrice);
                this.columnBid = new global::System.Data.DataColumn("Bid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBid);
                this.columnAsk = new global::System.Data.DataColumn("Ask", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsk);
                this.columnMid = new global::System.Data.DataColumn("Mid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMid);
                this.columnClosed = new global::System.Data.DataColumn("Closed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosed);
                this.columnClosingPrice = new global::System.Data.DataColumn("ClosingPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingPrice);
                this.columnDelta = new global::System.Data.DataColumn("Delta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelta);
                this.columnGamma = new global::System.Data.DataColumn("Gamma", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGamma);
                this.columnTheta = new global::System.Data.DataColumn("Theta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTheta);
                this.columnVega = new global::System.Data.DataColumn("Vega", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVega);
                this.columnImpliedVol = new global::System.Data.DataColumn("ImpliedVol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpliedVol);
                this.columnDeltaUSD = new global::System.Data.DataColumn("DeltaUSD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeltaUSD);
                this.columnGammaUSD = new global::System.Data.DataColumn("GammaUSD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGammaUSD);
                this.column100DeltaUSD = new global::System.Data.DataColumn("100DeltaUSD", typeof(double), null, global::System.Data.MappingType.Element);
                this.column100DeltaUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column100DeltaUSD");
                this.column100DeltaUSD.ExtendedProperties.Add("Generator_UserColumnName", "100DeltaUSD");
                base.Columns.Add(this.column100DeltaUSD);
                this.columnThetaAnnualized = new global::System.Data.DataColumn("ThetaAnnualized", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThetaAnnualized);
                this.columnTimePremium = new global::System.Data.DataColumn("TimePremium", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimePremium);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionType = new global::System.Data.DataColumn("OptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionType);
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnIsStock = new global::System.Data.DataColumn("IsStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsStock);
                this.columnIsOption = new global::System.Data.DataColumn("IsOption", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOption);
                this.columnIsFuture = new global::System.Data.DataColumn("IsFuture", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFuture);
                this.columnIsOutOfBounds = new global::System.Data.DataColumn("IsOutOfBounds", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutOfBounds);
                this.columnSubscriptionStatus = new global::System.Data.DataColumn("SubscriptionStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubscriptionStatus);
                this.columnUpdateTime = new global::System.Data.DataColumn("UpdateTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTime);
                this.columnPerformance = new global::System.Data.DataColumn("Performance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerformance);
                this.columnNettingAdjustment = new global::System.Data.DataColumn("NettingAdjustment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettingAdjustment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAccountName,
                                this.columnSymbol}, true));
                this.columnAccountName.AllowDBNull = false;
                this.columnSymbol.AllowDBNull = false;
                this.columnSymbol.MaxLength = 21;
                this.columnSOD_Position.DefaultValue = ((int)(0));
                this.columnSOD_Price.DefaultValue = ((double)(0D));
                this.columnSOD_Market_Value.DefaultValue = ((double)(0D));
                this.columnChange_in_Position.DefaultValue = ((int)(0));
                this.columnChange_in_Cost.DefaultValue = ((double)(0D));
                this.columnCurrent_Position.DefaultValue = ((int)(0));
                this.columnCurrent_Price.DefaultValue = ((double)(0D));
                this.columnCurrent_Cost.DefaultValue = ((double)(0D));
                this.columnCurrent_Market_Value.DefaultValue = ((double)(0D));
                this.columnP_and_L.DefaultValue = ((double)(0D));
                this.columnOpen.DefaultValue = ((double)(0D));
                this.columnPrevClose.DefaultValue = ((double)(0D));
                this.columnLastPrice.DefaultValue = ((double)(0D));
                this.columnBid.DefaultValue = ((double)(0D));
                this.columnAsk.DefaultValue = ((double)(0D));
                this.columnMid.ReadOnly = true;
                this.columnMid.DefaultValue = ((double)(0D));
                this.columnClosed.DefaultValue = ((bool)(false));
                this.columnClosingPrice.DefaultValue = ((double)(0D));
                this.columnDelta.DefaultValue = ((double)(0D));
                this.columnDeltaUSD.DefaultValue = ((double)(0D));
                this.columnGammaUSD.DefaultValue = ((double)(0D));
                this.column100DeltaUSD.DefaultValue = ((double)(0D));
                this.columnThetaAnnualized.DefaultValue = ((double)(0D));
                this.columnTimePremium.DefaultValue = ((double)(0D));
                this.columnMultiplier.DefaultValue = ((short)(0));
                this.columnIsOutOfBounds.DefaultValue = ((bool)(false));
                this.columnNettingAdjustment.Caption = "Netting Adj";
                this.columnNettingAdjustment.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioRow NewPortfolioRow() {
                return ((PortfolioRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PortfolioRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PortfolioRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PortfolioRowChanged != null)) {
                    this.PortfolioRowChanged(this, new PortfolioRowChangeEvent(((PortfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PortfolioRowChanging != null)) {
                    this.PortfolioRowChanging(this, new PortfolioRowChangeEvent(((PortfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PortfolioRowDeleted != null)) {
                    this.PortfolioRowDeleted(this, new PortfolioRowChangeEvent(((PortfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PortfolioRowDeleting != null)) {
                    this.PortfolioRowDeleting(this, new PortfolioRowChangeEvent(((PortfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePortfolioRow(PortfolioRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PortfolioDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BlotterDataTable : global::System.Data.TypedTableBase<BlotterRow> {
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnSymbol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionType;
            
            private global::System.Data.DataColumn columnTradeType;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            private global::System.Data.DataColumn columnIsStock;
            
            private global::System.Data.DataColumn columnIsOption;
            
            private global::System.Data.DataColumn columnIsFuture;
            
            private global::System.Data.DataColumn columnTradeTime;
            
            private global::System.Data.DataColumn columnTradeSource;
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnCurrentMarketPrice;
            
            private global::System.Data.DataColumn columnPandL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BlotterDataTable() {
                this.TableName = "Blotter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BlotterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BlotterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolColumn {
                get {
                    return this.columnSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeColumn {
                get {
                    return this.columnOptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeTypeColumn {
                get {
                    return this.columnTradeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsStockColumn {
                get {
                    return this.columnIsStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOptionColumn {
                get {
                    return this.columnIsOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsFutureColumn {
                get {
                    return this.columnIsFuture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeTimeColumn {
                get {
                    return this.columnTradeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeSourceColumn {
                get {
                    return this.columnTradeSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentMarketPriceColumn {
                get {
                    return this.columnCurrentMarketPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PandLColumn {
                get {
                    return this.columnPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BlotterRow this[int index] {
                get {
                    return ((BlotterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BlotterRowChangeEventHandler BlotterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BlotterRowChangeEventHandler BlotterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BlotterRowChangeEventHandler BlotterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BlotterRowChangeEventHandler BlotterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBlotterRow(BlotterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BlotterRow AddBlotterRow(
                        string AccountName, 
                        string Symbol, 
                        System.DateTime ExpirationDate, 
                        decimal StrikePrice, 
                        string OptionType, 
                        string TradeType, 
                        int Quantity, 
                        double Price, 
                        double Cost, 
                        string UnderlyingSymbol, 
                        short Multiplier, 
                        bool IsStock, 
                        bool IsOption, 
                        bool IsFuture, 
                        System.TimeSpan TradeTime, 
                        string TradeSource, 
                        int TradeId, 
                        double CurrentMarketPrice, 
                        double PandL) {
                BlotterRow rowBlotterRow = ((BlotterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountName,
                        Symbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionType,
                        TradeType,
                        Quantity,
                        Price,
                        Cost,
                        UnderlyingSymbol,
                        Multiplier,
                        IsStock,
                        IsOption,
                        IsFuture,
                        TradeTime,
                        TradeSource,
                        TradeId,
                        CurrentMarketPrice,
                        PandL};
                rowBlotterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBlotterRow);
                return rowBlotterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BlotterDataTable cln = ((BlotterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BlotterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccountName = base.Columns["AccountName"];
                this.columnSymbol = base.Columns["Symbol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionType = base.Columns["OptionType"];
                this.columnTradeType = base.Columns["TradeType"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice = base.Columns["Price"];
                this.columnCost = base.Columns["Cost"];
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnMultiplier = base.Columns["Multiplier"];
                this.columnIsStock = base.Columns["IsStock"];
                this.columnIsOption = base.Columns["IsOption"];
                this.columnIsFuture = base.Columns["IsFuture"];
                this.columnTradeTime = base.Columns["TradeTime"];
                this.columnTradeSource = base.Columns["TradeSource"];
                this.columnTradeId = base.Columns["TradeId"];
                this.columnCurrentMarketPrice = base.Columns["CurrentMarketPrice"];
                this.columnPandL = base.Columns["PandL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnSymbol = new global::System.Data.DataColumn("Symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionType = new global::System.Data.DataColumn("OptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionType);
                this.columnTradeType = new global::System.Data.DataColumn("TradeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeType);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnIsStock = new global::System.Data.DataColumn("IsStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsStock);
                this.columnIsOption = new global::System.Data.DataColumn("IsOption", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOption);
                this.columnIsFuture = new global::System.Data.DataColumn("IsFuture", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFuture);
                this.columnTradeTime = new global::System.Data.DataColumn("TradeTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeTime);
                this.columnTradeSource = new global::System.Data.DataColumn("TradeSource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeSource);
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnCurrentMarketPrice = new global::System.Data.DataColumn("CurrentMarketPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentMarketPrice);
                this.columnPandL = new global::System.Data.DataColumn("PandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPandL);
                this.columnTradeSource.AllowDBNull = false;
                this.columnTradeSource.DefaultValue = ((string)("\"\""));
                this.columnTradeId.AllowDBNull = false;
                this.columnTradeId.DefaultValue = ((int)(0));
                this.columnCurrentMarketPrice.DefaultValue = ((double)(0D));
                this.columnPandL.DefaultValue = ((double)(0D));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BlotterRow NewBlotterRow() {
                return ((BlotterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BlotterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BlotterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BlotterRowChanged != null)) {
                    this.BlotterRowChanged(this, new BlotterRowChangeEvent(((BlotterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BlotterRowChanging != null)) {
                    this.BlotterRowChanging(this, new BlotterRowChangeEvent(((BlotterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BlotterRowDeleted != null)) {
                    this.BlotterRowDeleted(this, new BlotterRowChangeEvent(((BlotterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BlotterRowDeleting != null)) {
                    this.BlotterRowDeleting(this, new BlotterRowChangeEvent(((BlotterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBlotterRow(BlotterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BlotterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccountDataDataTable : global::System.Data.TypedTableBase<AccountDataRow> {
            
            private global::System.Data.DataColumn columnEquityType;
            
            private global::System.Data.DataColumn columnClientType;
            
            private global::System.Data.DataColumn columnIsTest;
            
            private global::System.Data.DataColumn columnBaseEquity;
            
            private global::System.Data.DataColumn columnBaseCash;
            
            private global::System.Data.DataColumn columnBaseDate;
            
            private global::System.Data.DataColumn columnInflowsSinceBaseDate;
            
            private global::System.Data.DataColumn columnTodaysInflows;
            
            private global::System.Data.DataColumn columnPandLSinceBaseDate;
            
            private global::System.Data.DataColumn columnStartOfDayMarketValue;
            
            private global::System.Data.DataColumn columnStartOfDayEquity;
            
            private global::System.Data.DataColumn columnAvailableCash;
            
            private global::System.Data.DataColumn columnCurrentMarketValue;
            
            private global::System.Data.DataColumn columnCurrentEquity;
            
            private global::System.Data.DataColumn columnCurrentCash;
            
            private global::System.Data.DataColumn columnMinDelta;
            
            private global::System.Data.DataColumn columnMaxDelta;
            
            private global::System.Data.DataColumn columnTargetDelta;
            
            private global::System.Data.DataColumn columnDeltaGoal;
            
            private global::System.Data.DataColumn columnLeverage;
            
            private global::System.Data.DataColumn columnCurrentLeverage;
            
            private global::System.Data.DataColumn columnPutsPctTarget;
            
            private global::System.Data.DataColumn columnNextTradeTime;
            
            private global::System.Data.DataColumn columnOption_P_and_L;
            
            private global::System.Data.DataColumn columnStock_P_and_L;
            
            private global::System.Data.DataColumn columnFutures_P_and_L;
            
            private global::System.Data.DataColumn columnTotal_P_and_L;
            
            private global::System.Data.DataColumn columnDollarDeltasTraded;
            
            private global::System.Data.DataColumn columnDeltaPctTraded;
            
            private global::System.Data.DataColumn columnPutsTraded;
            
            private global::System.Data.DataColumn columnPutsOutOfBounds;
            
            private global::System.Data.DataColumn columnPutsOutOfMoneyThreshold;
            
            private global::System.Data.DataColumn columnTradingComplete;
            
            private global::System.Data.DataColumn columnMaximumCaks;
            
            private global::System.Data.DataColumn columnPortfolioPercentage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountDataDataTable() {
                this.TableName = "AccountData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccountDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AccountDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquityTypeColumn {
                get {
                    return this.columnEquityType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientTypeColumn {
                get {
                    return this.columnClientType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTestColumn {
                get {
                    return this.columnIsTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseEquityColumn {
                get {
                    return this.columnBaseEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseCashColumn {
                get {
                    return this.columnBaseCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseDateColumn {
                get {
                    return this.columnBaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InflowsSinceBaseDateColumn {
                get {
                    return this.columnInflowsSinceBaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TodaysInflowsColumn {
                get {
                    return this.columnTodaysInflows;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PandLSinceBaseDateColumn {
                get {
                    return this.columnPandLSinceBaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartOfDayMarketValueColumn {
                get {
                    return this.columnStartOfDayMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartOfDayEquityColumn {
                get {
                    return this.columnStartOfDayEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AvailableCashColumn {
                get {
                    return this.columnAvailableCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentMarketValueColumn {
                get {
                    return this.columnCurrentMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentEquityColumn {
                get {
                    return this.columnCurrentEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentCashColumn {
                get {
                    return this.columnCurrentCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinDeltaColumn {
                get {
                    return this.columnMinDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDeltaColumn {
                get {
                    return this.columnMaxDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDeltaColumn {
                get {
                    return this.columnTargetDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeltaGoalColumn {
                get {
                    return this.columnDeltaGoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeverageColumn {
                get {
                    return this.columnLeverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentLeverageColumn {
                get {
                    return this.columnCurrentLeverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsPctTargetColumn {
                get {
                    return this.columnPutsPctTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextTradeTimeColumn {
                get {
                    return this.columnNextTradeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Option_P_and_LColumn {
                get {
                    return this.columnOption_P_and_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Stock_P_and_LColumn {
                get {
                    return this.columnStock_P_and_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Futures_P_and_LColumn {
                get {
                    return this.columnFutures_P_and_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_P_and_LColumn {
                get {
                    return this.columnTotal_P_and_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DollarDeltasTradedColumn {
                get {
                    return this.columnDollarDeltasTraded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeltaPctTradedColumn {
                get {
                    return this.columnDeltaPctTraded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsTradedColumn {
                get {
                    return this.columnPutsTraded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsOutOfBoundsColumn {
                get {
                    return this.columnPutsOutOfBounds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsOutOfMoneyThresholdColumn {
                get {
                    return this.columnPutsOutOfMoneyThreshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingCompleteColumn {
                get {
                    return this.columnTradingComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaximumCaksColumn {
                get {
                    return this.columnMaximumCaks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PortfolioPercentageColumn {
                get {
                    return this.columnPortfolioPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountDataRow this[int index] {
                get {
                    return ((AccountDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountDataRowChangeEventHandler AccountDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountDataRowChangeEventHandler AccountDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountDataRowChangeEventHandler AccountDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountDataRowChangeEventHandler AccountDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAccountDataRow(AccountDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountDataRow AddAccountDataRow(
                        string EquityType, 
                        string ClientType, 
                        bool IsTest, 
                        double BaseEquity, 
                        double BaseCash, 
                        System.DateTime BaseDate, 
                        double InflowsSinceBaseDate, 
                        double TodaysInflows, 
                        double PandLSinceBaseDate, 
                        double StartOfDayMarketValue, 
                        double StartOfDayEquity, 
                        double AvailableCash, 
                        double CurrentMarketValue, 
                        double CurrentEquity, 
                        double CurrentCash, 
                        double MinDelta, 
                        double MaxDelta, 
                        double TargetDelta, 
                        double DeltaGoal, 
                        decimal Leverage, 
                        double CurrentLeverage, 
                        decimal PutsPctTarget, 
                        System.TimeSpan NextTradeTime, 
                        double Option_P_and_L, 
                        double Stock_P_and_L, 
                        double Futures_P_and_L, 
                        double Total_P_and_L, 
                        double DollarDeltasTraded, 
                        double DeltaPctTraded, 
                        int PutsTraded, 
                        bool PutsOutOfBounds, 
                        double PutsOutOfMoneyThreshold, 
                        bool TradingComplete, 
                        double MaximumCaks, 
                        double PortfolioPercentage) {
                AccountDataRow rowAccountDataRow = ((AccountDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EquityType,
                        ClientType,
                        IsTest,
                        BaseEquity,
                        BaseCash,
                        BaseDate,
                        InflowsSinceBaseDate,
                        TodaysInflows,
                        PandLSinceBaseDate,
                        StartOfDayMarketValue,
                        StartOfDayEquity,
                        AvailableCash,
                        CurrentMarketValue,
                        CurrentEquity,
                        CurrentCash,
                        MinDelta,
                        MaxDelta,
                        TargetDelta,
                        DeltaGoal,
                        Leverage,
                        CurrentLeverage,
                        PutsPctTarget,
                        NextTradeTime,
                        Option_P_and_L,
                        Stock_P_and_L,
                        Futures_P_and_L,
                        Total_P_and_L,
                        DollarDeltasTraded,
                        DeltaPctTraded,
                        PutsTraded,
                        PutsOutOfBounds,
                        PutsOutOfMoneyThreshold,
                        TradingComplete,
                        MaximumCaks,
                        PortfolioPercentage};
                rowAccountDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccountDataRow);
                return rowAccountDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AccountDataDataTable cln = ((AccountDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccountDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEquityType = base.Columns["EquityType"];
                this.columnClientType = base.Columns["ClientType"];
                this.columnIsTest = base.Columns["IsTest"];
                this.columnBaseEquity = base.Columns["BaseEquity"];
                this.columnBaseCash = base.Columns["BaseCash"];
                this.columnBaseDate = base.Columns["BaseDate"];
                this.columnInflowsSinceBaseDate = base.Columns["InflowsSinceBaseDate"];
                this.columnTodaysInflows = base.Columns["TodaysInflows"];
                this.columnPandLSinceBaseDate = base.Columns["PandLSinceBaseDate"];
                this.columnStartOfDayMarketValue = base.Columns["StartOfDayMarketValue"];
                this.columnStartOfDayEquity = base.Columns["StartOfDayEquity"];
                this.columnAvailableCash = base.Columns["AvailableCash"];
                this.columnCurrentMarketValue = base.Columns["CurrentMarketValue"];
                this.columnCurrentEquity = base.Columns["CurrentEquity"];
                this.columnCurrentCash = base.Columns["CurrentCash"];
                this.columnMinDelta = base.Columns["MinDelta"];
                this.columnMaxDelta = base.Columns["MaxDelta"];
                this.columnTargetDelta = base.Columns["TargetDelta"];
                this.columnDeltaGoal = base.Columns["DeltaGoal"];
                this.columnLeverage = base.Columns["Leverage"];
                this.columnCurrentLeverage = base.Columns["CurrentLeverage"];
                this.columnPutsPctTarget = base.Columns["PutsPctTarget"];
                this.columnNextTradeTime = base.Columns["NextTradeTime"];
                this.columnOption_P_and_L = base.Columns["Option P and L"];
                this.columnStock_P_and_L = base.Columns["Stock P and L"];
                this.columnFutures_P_and_L = base.Columns["Futures P and L"];
                this.columnTotal_P_and_L = base.Columns["Total P and L"];
                this.columnDollarDeltasTraded = base.Columns["DollarDeltasTraded"];
                this.columnDeltaPctTraded = base.Columns["DeltaPctTraded"];
                this.columnPutsTraded = base.Columns["PutsTraded"];
                this.columnPutsOutOfBounds = base.Columns["PutsOutOfBounds"];
                this.columnPutsOutOfMoneyThreshold = base.Columns["PutsOutOfMoneyThreshold"];
                this.columnTradingComplete = base.Columns["TradingComplete"];
                this.columnMaximumCaks = base.Columns["MaximumCaks"];
                this.columnPortfolioPercentage = base.Columns["PortfolioPercentage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEquityType = new global::System.Data.DataColumn("EquityType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquityType);
                this.columnClientType = new global::System.Data.DataColumn("ClientType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientType);
                this.columnIsTest = new global::System.Data.DataColumn("IsTest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTest);
                this.columnBaseEquity = new global::System.Data.DataColumn("BaseEquity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseEquity);
                this.columnBaseCash = new global::System.Data.DataColumn("BaseCash", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseCash);
                this.columnBaseDate = new global::System.Data.DataColumn("BaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseDate);
                this.columnInflowsSinceBaseDate = new global::System.Data.DataColumn("InflowsSinceBaseDate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInflowsSinceBaseDate);
                this.columnTodaysInflows = new global::System.Data.DataColumn("TodaysInflows", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTodaysInflows);
                this.columnPandLSinceBaseDate = new global::System.Data.DataColumn("PandLSinceBaseDate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPandLSinceBaseDate);
                this.columnStartOfDayMarketValue = new global::System.Data.DataColumn("StartOfDayMarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartOfDayMarketValue);
                this.columnStartOfDayEquity = new global::System.Data.DataColumn("StartOfDayEquity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartOfDayEquity);
                this.columnAvailableCash = new global::System.Data.DataColumn("AvailableCash", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailableCash);
                this.columnCurrentMarketValue = new global::System.Data.DataColumn("CurrentMarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentMarketValue);
                this.columnCurrentEquity = new global::System.Data.DataColumn("CurrentEquity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentEquity);
                this.columnCurrentCash = new global::System.Data.DataColumn("CurrentCash", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentCash);
                this.columnMinDelta = new global::System.Data.DataColumn("MinDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinDelta);
                this.columnMaxDelta = new global::System.Data.DataColumn("MaxDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDelta);
                this.columnTargetDelta = new global::System.Data.DataColumn("TargetDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDelta);
                this.columnDeltaGoal = new global::System.Data.DataColumn("DeltaGoal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeltaGoal);
                this.columnLeverage = new global::System.Data.DataColumn("Leverage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeverage);
                this.columnCurrentLeverage = new global::System.Data.DataColumn("CurrentLeverage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentLeverage);
                this.columnPutsPctTarget = new global::System.Data.DataColumn("PutsPctTarget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsPctTarget);
                this.columnNextTradeTime = new global::System.Data.DataColumn("NextTradeTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextTradeTime);
                this.columnOption_P_and_L = new global::System.Data.DataColumn("Option P and L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption_P_and_L);
                this.columnStock_P_and_L = new global::System.Data.DataColumn("Stock P and L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock_P_and_L);
                this.columnFutures_P_and_L = new global::System.Data.DataColumn("Futures P and L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFutures_P_and_L);
                this.columnTotal_P_and_L = new global::System.Data.DataColumn("Total P and L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_P_and_L);
                this.columnDollarDeltasTraded = new global::System.Data.DataColumn("DollarDeltasTraded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDollarDeltasTraded);
                this.columnDeltaPctTraded = new global::System.Data.DataColumn("DeltaPctTraded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeltaPctTraded);
                this.columnPutsTraded = new global::System.Data.DataColumn("PutsTraded", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsTraded);
                this.columnPutsOutOfBounds = new global::System.Data.DataColumn("PutsOutOfBounds", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsOutOfBounds);
                this.columnPutsOutOfMoneyThreshold = new global::System.Data.DataColumn("PutsOutOfMoneyThreshold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsOutOfMoneyThreshold);
                this.columnTradingComplete = new global::System.Data.DataColumn("TradingComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingComplete);
                this.columnMaximumCaks = new global::System.Data.DataColumn("MaximumCaks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumCaks);
                this.columnPortfolioPercentage = new global::System.Data.DataColumn("PortfolioPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioPercentage);
                this.columnCurrentMarketValue.DefaultValue = ((double)(0D));
                this.columnCurrentEquity.DefaultValue = ((double)(0D));
                this.columnCurrentCash.DefaultValue = ((double)(0D));
                this.columnCurrentLeverage.DefaultValue = ((double)(0D));
                this.columnOption_P_and_L.DefaultValue = ((double)(0D));
                this.columnStock_P_and_L.DefaultValue = ((double)(0D));
                this.columnFutures_P_and_L.DefaultValue = ((double)(0D));
                this.columnTotal_P_and_L.DefaultValue = ((double)(0D));
                this.columnDollarDeltasTraded.DefaultValue = ((double)(0D));
                this.columnDeltaPctTraded.DefaultValue = ((double)(0D));
                this.columnPutsTraded.DefaultValue = ((int)(0));
                this.columnPutsOutOfBounds.DefaultValue = ((bool)(false));
                this.columnPutsOutOfMoneyThreshold.DefaultValue = ((double)(0.05D));
                this.columnTradingComplete.DefaultValue = ((bool)(false));
                this.columnMaximumCaks.DefaultValue = ((double)(3D));
                this.columnPortfolioPercentage.DefaultValue = ((double)(1D));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountDataRow NewAccountDataRow() {
                return ((AccountDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccountDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AccountDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccountDataRowChanged != null)) {
                    this.AccountDataRowChanged(this, new AccountDataRowChangeEvent(((AccountDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccountDataRowChanging != null)) {
                    this.AccountDataRowChanging(this, new AccountDataRowChangeEvent(((AccountDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccountDataRowDeleted != null)) {
                    this.AccountDataRowDeleted(this, new AccountDataRowChangeEvent(((AccountDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccountDataRowDeleting != null)) {
                    this.AccountDataRowDeleting(this, new AccountDataRowChangeEvent(((AccountDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAccountDataRow(AccountDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccountDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IndicesDataTable : global::System.Data.TypedTableBase<IndicesRow> {
            
            private global::System.Data.DataColumn columnSymbol;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnOpen;
            
            private global::System.Data.DataColumn columnPrevClose;
            
            private global::System.Data.DataColumn columnLastPrice;
            
            private global::System.Data.DataColumn columnTargetValue;
            
            private global::System.Data.DataColumn columnTotalDeltaPct;
            
            private global::System.Data.DataColumn columnCallDeltaPct;
            
            private global::System.Data.DataColumn columnPutDeltaPct;
            
            private global::System.Data.DataColumn columnFaceValuePutsPct;
            
            private global::System.Data.DataColumn columnShortPct;
            
            private global::System.Data.DataColumn columnTimePremium;
            
            private global::System.Data.DataColumn columnCaks;
            
            private global::System.Data.DataColumn columnGammaPct;
            
            private global::System.Data.DataColumn columnThetaAnnualized;
            
            private global::System.Data.DataColumn columnDeltasToTrade;
            
            private global::System.Data.DataColumn columnPutsToRebalance;
            
            private global::System.Data.DataColumn columnPutsToTrade;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesDataTable() {
                this.TableName = "Indices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IndicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected IndicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolColumn {
                get {
                    return this.columnSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpenColumn {
                get {
                    return this.columnOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevCloseColumn {
                get {
                    return this.columnPrevClose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPriceColumn {
                get {
                    return this.columnLastPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetValueColumn {
                get {
                    return this.columnTargetValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDeltaPctColumn {
                get {
                    return this.columnTotalDeltaPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallDeltaPctColumn {
                get {
                    return this.columnCallDeltaPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutDeltaPctColumn {
                get {
                    return this.columnPutDeltaPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaceValuePutsPctColumn {
                get {
                    return this.columnFaceValuePutsPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortPctColumn {
                get {
                    return this.columnShortPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimePremiumColumn {
                get {
                    return this.columnTimePremium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CaksColumn {
                get {
                    return this.columnCaks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GammaPctColumn {
                get {
                    return this.columnGammaPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThetaAnnualizedColumn {
                get {
                    return this.columnThetaAnnualized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeltasToTradeColumn {
                get {
                    return this.columnDeltasToTrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsToRebalanceColumn {
                get {
                    return this.columnPutsToRebalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsToTradeColumn {
                get {
                    return this.columnPutsToTrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesRow this[int index] {
                get {
                    return ((IndicesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndicesRowChangeEventHandler IndicesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndicesRowChangeEventHandler IndicesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndicesRowChangeEventHandler IndicesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndicesRowChangeEventHandler IndicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddIndicesRow(IndicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesRow AddIndicesRow(
                        string Symbol, 
                        decimal Weight, 
                        double Open, 
                        double PrevClose, 
                        double LastPrice, 
                        double TargetValue, 
                        double TotalDeltaPct, 
                        double CallDeltaPct, 
                        double PutDeltaPct, 
                        double FaceValuePutsPct, 
                        double ShortPct, 
                        double TimePremium, 
                        double Caks, 
                        double GammaPct, 
                        double ThetaAnnualized, 
                        double DeltasToTrade, 
                        int PutsToRebalance, 
                        int PutsToTrade) {
                IndicesRow rowIndicesRow = ((IndicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Symbol,
                        Weight,
                        Open,
                        PrevClose,
                        LastPrice,
                        TargetValue,
                        TotalDeltaPct,
                        CallDeltaPct,
                        PutDeltaPct,
                        FaceValuePutsPct,
                        ShortPct,
                        TimePremium,
                        Caks,
                        GammaPct,
                        ThetaAnnualized,
                        DeltasToTrade,
                        PutsToRebalance,
                        PutsToTrade};
                rowIndicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIndicesRow);
                return rowIndicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesRow FindBySymbol(string Symbol) {
                return ((IndicesRow)(this.Rows.Find(new object[] {
                            Symbol})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IndicesDataTable cln = ((IndicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IndicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSymbol = base.Columns["Symbol"];
                this.columnWeight = base.Columns["Weight"];
                this.columnOpen = base.Columns["Open"];
                this.columnPrevClose = base.Columns["PrevClose"];
                this.columnLastPrice = base.Columns["LastPrice"];
                this.columnTargetValue = base.Columns["TargetValue"];
                this.columnTotalDeltaPct = base.Columns["TotalDeltaPct"];
                this.columnCallDeltaPct = base.Columns["CallDeltaPct"];
                this.columnPutDeltaPct = base.Columns["PutDeltaPct"];
                this.columnFaceValuePutsPct = base.Columns["FaceValuePutsPct"];
                this.columnShortPct = base.Columns["ShortPct"];
                this.columnTimePremium = base.Columns["TimePremium"];
                this.columnCaks = base.Columns["Caks"];
                this.columnGammaPct = base.Columns["GammaPct"];
                this.columnThetaAnnualized = base.Columns["ThetaAnnualized"];
                this.columnDeltasToTrade = base.Columns["DeltasToTrade"];
                this.columnPutsToRebalance = base.Columns["PutsToRebalance"];
                this.columnPutsToTrade = base.Columns["PutsToTrade"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSymbol = new global::System.Data.DataColumn("Symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbol);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnOpen = new global::System.Data.DataColumn("Open", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpen);
                this.columnPrevClose = new global::System.Data.DataColumn("PrevClose", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevClose);
                this.columnLastPrice = new global::System.Data.DataColumn("LastPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPrice);
                this.columnTargetValue = new global::System.Data.DataColumn("TargetValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetValue);
                this.columnTotalDeltaPct = new global::System.Data.DataColumn("TotalDeltaPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDeltaPct);
                this.columnCallDeltaPct = new global::System.Data.DataColumn("CallDeltaPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallDeltaPct);
                this.columnPutDeltaPct = new global::System.Data.DataColumn("PutDeltaPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutDeltaPct);
                this.columnFaceValuePutsPct = new global::System.Data.DataColumn("FaceValuePutsPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaceValuePutsPct);
                this.columnShortPct = new global::System.Data.DataColumn("ShortPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortPct);
                this.columnTimePremium = new global::System.Data.DataColumn("TimePremium", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimePremium);
                this.columnCaks = new global::System.Data.DataColumn("Caks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaks);
                this.columnGammaPct = new global::System.Data.DataColumn("GammaPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGammaPct);
                this.columnThetaAnnualized = new global::System.Data.DataColumn("ThetaAnnualized", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThetaAnnualized);
                this.columnDeltasToTrade = new global::System.Data.DataColumn("DeltasToTrade", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeltasToTrade);
                this.columnPutsToRebalance = new global::System.Data.DataColumn("PutsToRebalance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsToRebalance);
                this.columnPutsToTrade = new global::System.Data.DataColumn("PutsToTrade", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsToTrade);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSymbol}, true));
                this.columnSymbol.AllowDBNull = false;
                this.columnSymbol.Unique = true;
                this.columnWeight.DefaultValue = ((decimal)(0m));
                this.columnOpen.DefaultValue = ((double)(0D));
                this.columnPrevClose.DefaultValue = ((double)(0D));
                this.columnLastPrice.DefaultValue = ((double)(0D));
                this.columnTargetValue.DefaultValue = ((double)(0D));
                this.columnTotalDeltaPct.DefaultValue = ((double)(0D));
                this.columnCallDeltaPct.DefaultValue = ((double)(0D));
                this.columnPutDeltaPct.DefaultValue = ((double)(0D));
                this.columnFaceValuePutsPct.DefaultValue = ((double)(0D));
                this.columnShortPct.DefaultValue = ((double)(0D));
                this.columnTimePremium.DefaultValue = ((double)(0D));
                this.columnCaks.DefaultValue = ((double)(0D));
                this.columnGammaPct.DefaultValue = ((double)(0D));
                this.columnThetaAnnualized.DefaultValue = ((double)(0D));
                this.columnDeltasToTrade.DefaultValue = ((double)(0D));
                this.columnPutsToRebalance.DefaultValue = ((int)(0));
                this.columnPutsToTrade.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesRow NewIndicesRow() {
                return ((IndicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IndicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IndicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IndicesRowChanged != null)) {
                    this.IndicesRowChanged(this, new IndicesRowChangeEvent(((IndicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IndicesRowChanging != null)) {
                    this.IndicesRowChanging(this, new IndicesRowChangeEvent(((IndicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IndicesRowDeleted != null)) {
                    this.IndicesRowDeleted(this, new IndicesRowChangeEvent(((IndicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IndicesRowDeleting != null)) {
                    this.IndicesRowDeleting(this, new IndicesRowChangeEvent(((IndicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveIndicesRow(IndicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IndicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccountSummaryDataTable : global::System.Data.TypedTableBase<AccountSummaryRow> {
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnReturnOnEquity;
            
            private global::System.Data.DataColumn columnBenchmark;
            
            private global::System.Data.DataColumn columnBenchmarkReturn;
            
            private global::System.Data.DataColumn columnTargetReturn;
            
            private global::System.Data.DataColumn columnOptionPandL;
            
            private global::System.Data.DataColumn columnStockPandL;
            
            private global::System.Data.DataColumn columnFuturesPandL;
            
            private global::System.Data.DataColumn columnTotalPandL;
            
            private global::System.Data.DataColumn columnMinDelta;
            
            private global::System.Data.DataColumn columnMaxDelta;
            
            private global::System.Data.DataColumn columnTargetDelta;
            
            private global::System.Data.DataColumn columnTotalDeltaPct;
            
            private global::System.Data.DataColumn columnPutsToTrade;
            
            private global::System.Data.DataColumn columnPutsOutOfBounds;
            
            private global::System.Data.DataColumn columnNextTradeTime;
            
            private global::System.Data.DataColumn columnTradingComplete;
            
            private global::System.Data.DataColumn columnGrossReturnMTD;
            
            private global::System.Data.DataColumn columnNetReturnMTD;
            
            private global::System.Data.DataColumn columnBenchmarkReturnMTD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryDataTable() {
                this.TableName = "AccountSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccountSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AccountSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnOnEquityColumn {
                get {
                    return this.columnReturnOnEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenchmarkColumn {
                get {
                    return this.columnBenchmark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenchmarkReturnColumn {
                get {
                    return this.columnBenchmarkReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetReturnColumn {
                get {
                    return this.columnTargetReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionPandLColumn {
                get {
                    return this.columnOptionPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockPandLColumn {
                get {
                    return this.columnStockPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuturesPandLColumn {
                get {
                    return this.columnFuturesPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPandLColumn {
                get {
                    return this.columnTotalPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinDeltaColumn {
                get {
                    return this.columnMinDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDeltaColumn {
                get {
                    return this.columnMaxDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDeltaColumn {
                get {
                    return this.columnTargetDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDeltaPctColumn {
                get {
                    return this.columnTotalDeltaPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsToTradeColumn {
                get {
                    return this.columnPutsToTrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PutsOutOfBoundsColumn {
                get {
                    return this.columnPutsOutOfBounds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextTradeTimeColumn {
                get {
                    return this.columnNextTradeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingCompleteColumn {
                get {
                    return this.columnTradingComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossReturnMTDColumn {
                get {
                    return this.columnGrossReturnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetReturnMTDColumn {
                get {
                    return this.columnNetReturnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenchmarkReturnMTDColumn {
                get {
                    return this.columnBenchmarkReturnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryRow this[int index] {
                get {
                    return ((AccountSummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountSummaryRowChangeEventHandler AccountSummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountSummaryRowChangeEventHandler AccountSummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountSummaryRowChangeEventHandler AccountSummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountSummaryRowChangeEventHandler AccountSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAccountSummaryRow(AccountSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryRow AddAccountSummaryRow(
                        string AccountName, 
                        double ReturnOnEquity, 
                        string Benchmark, 
                        double BenchmarkReturn, 
                        double TargetReturn, 
                        double OptionPandL, 
                        double StockPandL, 
                        double FuturesPandL, 
                        double TotalPandL, 
                        double MinDelta, 
                        double MaxDelta, 
                        double TargetDelta, 
                        double TotalDeltaPct, 
                        int PutsToTrade, 
                        bool PutsOutOfBounds, 
                        System.TimeSpan NextTradeTime, 
                        bool TradingComplete, 
                        double GrossReturnMTD, 
                        double NetReturnMTD, 
                        double BenchmarkReturnMTD) {
                AccountSummaryRow rowAccountSummaryRow = ((AccountSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountName,
                        ReturnOnEquity,
                        Benchmark,
                        BenchmarkReturn,
                        TargetReturn,
                        OptionPandL,
                        StockPandL,
                        FuturesPandL,
                        TotalPandL,
                        MinDelta,
                        MaxDelta,
                        TargetDelta,
                        TotalDeltaPct,
                        PutsToTrade,
                        PutsOutOfBounds,
                        NextTradeTime,
                        TradingComplete,
                        GrossReturnMTD,
                        NetReturnMTD,
                        BenchmarkReturnMTD};
                rowAccountSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccountSummaryRow);
                return rowAccountSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryRow FindByAccountName(string AccountName) {
                return ((AccountSummaryRow)(this.Rows.Find(new object[] {
                            AccountName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AccountSummaryDataTable cln = ((AccountSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccountSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccountName = base.Columns["AccountName"];
                this.columnReturnOnEquity = base.Columns["ReturnOnEquity"];
                this.columnBenchmark = base.Columns["Benchmark"];
                this.columnBenchmarkReturn = base.Columns["BenchmarkReturn"];
                this.columnTargetReturn = base.Columns["TargetReturn"];
                this.columnOptionPandL = base.Columns["OptionPandL"];
                this.columnStockPandL = base.Columns["StockPandL"];
                this.columnFuturesPandL = base.Columns["FuturesPandL"];
                this.columnTotalPandL = base.Columns["TotalPandL"];
                this.columnMinDelta = base.Columns["MinDelta"];
                this.columnMaxDelta = base.Columns["MaxDelta"];
                this.columnTargetDelta = base.Columns["TargetDelta"];
                this.columnTotalDeltaPct = base.Columns["TotalDeltaPct"];
                this.columnPutsToTrade = base.Columns["PutsToTrade"];
                this.columnPutsOutOfBounds = base.Columns["PutsOutOfBounds"];
                this.columnNextTradeTime = base.Columns["NextTradeTime"];
                this.columnTradingComplete = base.Columns["TradingComplete"];
                this.columnGrossReturnMTD = base.Columns["GrossReturnMTD"];
                this.columnNetReturnMTD = base.Columns["NetReturnMTD"];
                this.columnBenchmarkReturnMTD = base.Columns["BenchmarkReturnMTD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnReturnOnEquity = new global::System.Data.DataColumn("ReturnOnEquity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnOnEquity);
                this.columnBenchmark = new global::System.Data.DataColumn("Benchmark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchmark);
                this.columnBenchmarkReturn = new global::System.Data.DataColumn("BenchmarkReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchmarkReturn);
                this.columnTargetReturn = new global::System.Data.DataColumn("TargetReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetReturn);
                this.columnOptionPandL = new global::System.Data.DataColumn("OptionPandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionPandL);
                this.columnStockPandL = new global::System.Data.DataColumn("StockPandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPandL);
                this.columnFuturesPandL = new global::System.Data.DataColumn("FuturesPandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuturesPandL);
                this.columnTotalPandL = new global::System.Data.DataColumn("TotalPandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPandL);
                this.columnMinDelta = new global::System.Data.DataColumn("MinDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinDelta);
                this.columnMaxDelta = new global::System.Data.DataColumn("MaxDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDelta);
                this.columnTargetDelta = new global::System.Data.DataColumn("TargetDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDelta);
                this.columnTotalDeltaPct = new global::System.Data.DataColumn("TotalDeltaPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDeltaPct);
                this.columnPutsToTrade = new global::System.Data.DataColumn("PutsToTrade", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsToTrade);
                this.columnPutsOutOfBounds = new global::System.Data.DataColumn("PutsOutOfBounds", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutsOutOfBounds);
                this.columnNextTradeTime = new global::System.Data.DataColumn("NextTradeTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextTradeTime);
                this.columnTradingComplete = new global::System.Data.DataColumn("TradingComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingComplete);
                this.columnGrossReturnMTD = new global::System.Data.DataColumn("GrossReturnMTD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossReturnMTD);
                this.columnNetReturnMTD = new global::System.Data.DataColumn("NetReturnMTD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetReturnMTD);
                this.columnBenchmarkReturnMTD = new global::System.Data.DataColumn("BenchmarkReturnMTD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchmarkReturnMTD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAccountName}, true));
                this.columnAccountName.AllowDBNull = false;
                this.columnAccountName.Unique = true;
                this.columnReturnOnEquity.Caption = "Return";
                this.columnBenchmarkReturn.Caption = "Benchmark Return";
                this.columnTargetReturn.Caption = "Target Return";
                this.columnMinDelta.Caption = "Min Delta";
                this.columnMaxDelta.Caption = "Max Delta";
                this.columnTargetDelta.Caption = "Target Delta";
                this.columnTotalDeltaPct.Caption = "Total Delta%";
                this.columnPutsToTrade.Caption = "Puts to Trade";
                this.columnPutsOutOfBounds.DefaultValue = ((bool)(false));
                this.columnTradingComplete.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryRow NewAccountSummaryRow() {
                return ((AccountSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccountSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AccountSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccountSummaryRowChanged != null)) {
                    this.AccountSummaryRowChanged(this, new AccountSummaryRowChangeEvent(((AccountSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccountSummaryRowChanging != null)) {
                    this.AccountSummaryRowChanging(this, new AccountSummaryRowChangeEvent(((AccountSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccountSummaryRowDeleted != null)) {
                    this.AccountSummaryRowDeleted(this, new AccountSummaryRowChangeEvent(((AccountSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccountSummaryRowDeleting != null)) {
                    this.AccountSummaryRowDeleting(this, new AccountSummaryRowChangeEvent(((AccountSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAccountSummaryRow(AccountSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccountSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StressTestDataTable : global::System.Data.TypedTableBase<StressTestRow> {
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnSymbol;
            
            private global::System.Data.DataColumn columnCurrent_Position;
            
            private global::System.Data.DataColumn columnCurrent_Price;
            
            private global::System.Data.DataColumn columnCurrent_Theoretical;
            
            private global::System.Data.DataColumn columnNew_Theoretical;
            
            private global::System.Data.DataColumn columnCurrent_Market_Value;
            
            private global::System.Data.DataColumn columnNew_Market_Value;
            
            private global::System.Data.DataColumn columnP_and_L;
            
            private global::System.Data.DataColumn columnDelta;
            
            private global::System.Data.DataColumn columnImpliedVol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionType;
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            private global::System.Data.DataColumn columnIsStock;
            
            private global::System.Data.DataColumn columnIsOption;
            
            private global::System.Data.DataColumn columnIsFuture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestDataTable() {
                this.TableName = "StressTest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StressTestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StressTestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolColumn {
                get {
                    return this.columnSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_PositionColumn {
                get {
                    return this.columnCurrent_Position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_PriceColumn {
                get {
                    return this.columnCurrent_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_TheoreticalColumn {
                get {
                    return this.columnCurrent_Theoretical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn New_TheoreticalColumn {
                get {
                    return this.columnNew_Theoretical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Current_Market_ValueColumn {
                get {
                    return this.columnCurrent_Market_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn New_Market_ValueColumn {
                get {
                    return this.columnNew_Market_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P_and_LColumn {
                get {
                    return this.columnP_and_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeltaColumn {
                get {
                    return this.columnDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImpliedVolColumn {
                get {
                    return this.columnImpliedVol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeColumn {
                get {
                    return this.columnOptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsStockColumn {
                get {
                    return this.columnIsStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOptionColumn {
                get {
                    return this.columnIsOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsFutureColumn {
                get {
                    return this.columnIsFuture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestRow this[int index] {
                get {
                    return ((StressTestRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestRowChangeEventHandler StressTestRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestRowChangeEventHandler StressTestRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestRowChangeEventHandler StressTestRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestRowChangeEventHandler StressTestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStressTestRow(StressTestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestRow AddStressTestRow(
                        string AccountName, 
                        string Symbol, 
                        int Current_Position, 
                        double Current_Price, 
                        double Current_Theoretical, 
                        double New_Theoretical, 
                        double Current_Market_Value, 
                        double New_Market_Value, 
                        double P_and_L, 
                        double Delta, 
                        double ImpliedVol, 
                        System.DateTime ExpirationDate, 
                        decimal StrikePrice, 
                        string OptionType, 
                        string UnderlyingSymbol, 
                        short Multiplier, 
                        bool IsStock, 
                        bool IsOption, 
                        bool IsFuture) {
                StressTestRow rowStressTestRow = ((StressTestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountName,
                        Symbol,
                        Current_Position,
                        Current_Price,
                        Current_Theoretical,
                        New_Theoretical,
                        Current_Market_Value,
                        New_Market_Value,
                        P_and_L,
                        Delta,
                        ImpliedVol,
                        ExpirationDate,
                        StrikePrice,
                        OptionType,
                        UnderlyingSymbol,
                        Multiplier,
                        IsStock,
                        IsOption,
                        IsFuture};
                rowStressTestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStressTestRow);
                return rowStressTestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestRow FindByAccountNameSymbol(string AccountName, string Symbol) {
                return ((StressTestRow)(this.Rows.Find(new object[] {
                            AccountName,
                            Symbol})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StressTestDataTable cln = ((StressTestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StressTestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccountName = base.Columns["AccountName"];
                this.columnSymbol = base.Columns["Symbol"];
                this.columnCurrent_Position = base.Columns["Current Position"];
                this.columnCurrent_Price = base.Columns["Current Price"];
                this.columnCurrent_Theoretical = base.Columns["Current Theoretical"];
                this.columnNew_Theoretical = base.Columns["New Theoretical"];
                this.columnCurrent_Market_Value = base.Columns["Current Market Value"];
                this.columnNew_Market_Value = base.Columns["New Market Value"];
                this.columnP_and_L = base.Columns["P and L"];
                this.columnDelta = base.Columns["Delta"];
                this.columnImpliedVol = base.Columns["ImpliedVol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionType = base.Columns["OptionType"];
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnMultiplier = base.Columns["Multiplier"];
                this.columnIsStock = base.Columns["IsStock"];
                this.columnIsOption = base.Columns["IsOption"];
                this.columnIsFuture = base.Columns["IsFuture"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnSymbol = new global::System.Data.DataColumn("Symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbol);
                this.columnCurrent_Position = new global::System.Data.DataColumn("Current Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Position);
                this.columnCurrent_Price = new global::System.Data.DataColumn("Current Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Price);
                this.columnCurrent_Theoretical = new global::System.Data.DataColumn("Current Theoretical", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Theoretical);
                this.columnNew_Theoretical = new global::System.Data.DataColumn("New Theoretical", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNew_Theoretical);
                this.columnCurrent_Market_Value = new global::System.Data.DataColumn("Current Market Value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Market_Value);
                this.columnNew_Market_Value = new global::System.Data.DataColumn("New Market Value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNew_Market_Value);
                this.columnP_and_L = new global::System.Data.DataColumn("P and L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_and_L);
                this.columnDelta = new global::System.Data.DataColumn("Delta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelta);
                this.columnImpliedVol = new global::System.Data.DataColumn("ImpliedVol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpliedVol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionType = new global::System.Data.DataColumn("OptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionType);
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnIsStock = new global::System.Data.DataColumn("IsStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsStock);
                this.columnIsOption = new global::System.Data.DataColumn("IsOption", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOption);
                this.columnIsFuture = new global::System.Data.DataColumn("IsFuture", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFuture);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAccountName,
                                this.columnSymbol}, true));
                this.columnAccountName.AllowDBNull = false;
                this.columnSymbol.AllowDBNull = false;
                this.columnSymbol.MaxLength = 21;
                this.columnCurrent_Position.DefaultValue = ((int)(0));
                this.columnCurrent_Price.DefaultValue = ((double)(0D));
                this.columnCurrent_Theoretical.DefaultValue = ((double)(0D));
                this.columnNew_Theoretical.DefaultValue = ((double)(0D));
                this.columnCurrent_Market_Value.DefaultValue = ((double)(0D));
                this.columnP_and_L.DefaultValue = ((double)(0D));
                this.columnDelta.DefaultValue = ((double)(0D));
                this.columnMultiplier.DefaultValue = ((short)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestRow NewStressTestRow() {
                return ((StressTestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StressTestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StressTestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StressTestRowChanged != null)) {
                    this.StressTestRowChanged(this, new StressTestRowChangeEvent(((StressTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StressTestRowChanging != null)) {
                    this.StressTestRowChanging(this, new StressTestRowChangeEvent(((StressTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StressTestRowDeleted != null)) {
                    this.StressTestRowDeleted(this, new StressTestRowChangeEvent(((StressTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StressTestRowDeleting != null)) {
                    this.StressTestRowDeleting(this, new StressTestRowChangeEvent(((StressTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStressTestRow(StressTestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StressTestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StressTestSummaryDataTable : global::System.Data.TypedTableBase<StressTestSummaryRow> {
            
            private global::System.Data.DataColumn columnRiskFreeInterestRate;
            
            private global::System.Data.DataColumn columnChangeInMarket;
            
            private global::System.Data.DataColumn columnChangeInVolatility;
            
            private global::System.Data.DataColumn columnCurrentEquity;
            
            private global::System.Data.DataColumn columnCurrentMarketValue;
            
            private global::System.Data.DataColumn columnNewMarketValue;
            
            private global::System.Data.DataColumn columnPandL;
            
            private global::System.Data.DataColumn columnPercentPandL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestSummaryDataTable() {
                this.TableName = "StressTestSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StressTestSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StressTestSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RiskFreeInterestRateColumn {
                get {
                    return this.columnRiskFreeInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChangeInMarketColumn {
                get {
                    return this.columnChangeInMarket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChangeInVolatilityColumn {
                get {
                    return this.columnChangeInVolatility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentEquityColumn {
                get {
                    return this.columnCurrentEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentMarketValueColumn {
                get {
                    return this.columnCurrentMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewMarketValueColumn {
                get {
                    return this.columnNewMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PandLColumn {
                get {
                    return this.columnPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentPandLColumn {
                get {
                    return this.columnPercentPandL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestSummaryRow this[int index] {
                get {
                    return ((StressTestSummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestSummaryRowChangeEventHandler StressTestSummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestSummaryRowChangeEventHandler StressTestSummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestSummaryRowChangeEventHandler StressTestSummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StressTestSummaryRowChangeEventHandler StressTestSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStressTestSummaryRow(StressTestSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestSummaryRow AddStressTestSummaryRow(double RiskFreeInterestRate, double ChangeInMarket, double ChangeInVolatility, double CurrentEquity, double CurrentMarketValue, double NewMarketValue, double PandL, double PercentPandL) {
                StressTestSummaryRow rowStressTestSummaryRow = ((StressTestSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RiskFreeInterestRate,
                        ChangeInMarket,
                        ChangeInVolatility,
                        CurrentEquity,
                        CurrentMarketValue,
                        NewMarketValue,
                        PandL,
                        PercentPandL};
                rowStressTestSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStressTestSummaryRow);
                return rowStressTestSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StressTestSummaryDataTable cln = ((StressTestSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StressTestSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRiskFreeInterestRate = base.Columns["RiskFreeInterestRate"];
                this.columnChangeInMarket = base.Columns["ChangeInMarket"];
                this.columnChangeInVolatility = base.Columns["ChangeInVolatility"];
                this.columnCurrentEquity = base.Columns["CurrentEquity"];
                this.columnCurrentMarketValue = base.Columns["CurrentMarketValue"];
                this.columnNewMarketValue = base.Columns["NewMarketValue"];
                this.columnPandL = base.Columns["PandL"];
                this.columnPercentPandL = base.Columns["PercentPandL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRiskFreeInterestRate = new global::System.Data.DataColumn("RiskFreeInterestRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskFreeInterestRate);
                this.columnChangeInMarket = new global::System.Data.DataColumn("ChangeInMarket", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeInMarket);
                this.columnChangeInVolatility = new global::System.Data.DataColumn("ChangeInVolatility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeInVolatility);
                this.columnCurrentEquity = new global::System.Data.DataColumn("CurrentEquity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentEquity);
                this.columnCurrentMarketValue = new global::System.Data.DataColumn("CurrentMarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentMarketValue);
                this.columnNewMarketValue = new global::System.Data.DataColumn("NewMarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewMarketValue);
                this.columnPandL = new global::System.Data.DataColumn("PandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPandL);
                this.columnPercentPandL = new global::System.Data.DataColumn("PercentPandL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentPandL);
                this.columnPandL.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestSummaryRow NewStressTestSummaryRow() {
                return ((StressTestSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StressTestSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StressTestSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StressTestSummaryRowChanged != null)) {
                    this.StressTestSummaryRowChanged(this, new StressTestSummaryRowChangeEvent(((StressTestSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StressTestSummaryRowChanging != null)) {
                    this.StressTestSummaryRowChanging(this, new StressTestSummaryRowChangeEvent(((StressTestSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StressTestSummaryRowDeleted != null)) {
                    this.StressTestSummaryRowDeleted(this, new StressTestSummaryRowChangeEvent(((StressTestSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StressTestSummaryRowDeleting != null)) {
                    this.StressTestSummaryRowDeleting(this, new StressTestSummaryRowChangeEvent(((StressTestSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStressTestSummaryRow(StressTestSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AccountDataSet ds = new AccountDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StressTestSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PortfolioRow : global::System.Data.DataRow {
            
            private PortfolioDataTable tablePortfolio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PortfolioRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePortfolio = ((PortfolioDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountName {
                get {
                    return ((string)(this[this.tablePortfolio.AccountNameColumn]));
                }
                set {
                    this[this.tablePortfolio.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbol {
                get {
                    return ((string)(this[this.tablePortfolio.SymbolColumn]));
                }
                set {
                    this[this.tablePortfolio.SymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SOD_Position {
                get {
                    try {
                        return ((int)(this[this.tablePortfolio.SOD_PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOD Position\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.SOD_PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SOD_Price {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.SOD_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOD Price\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.SOD_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SOD_Market_Value {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.SOD_Market_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOD Market Value\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.SOD_Market_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Change_in_Position {
                get {
                    try {
                        return ((int)(this[this.tablePortfolio.Change_in_PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Change in Position\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.Change_in_PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Change_in_Cost {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.Change_in_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Change in Cost\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.Change_in_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Current_Position {
                get {
                    try {
                        return ((int)(this[this.tablePortfolio.Current_PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Position\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.Current_PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Current_Price {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.Current_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Price\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.Current_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Current_Cost {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.Current_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Cost\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.Current_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Current_Market_Value {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.Current_Market_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Market Value\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.Current_Market_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double P_and_L {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.P_and_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P and L\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.P_and_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Open {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.OpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Open\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.OpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrevClose {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.PrevCloseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevClose\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.PrevCloseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LastPrice {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.LastPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPrice\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.LastPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Bid {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.BidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bid\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.BidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Ask {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.AskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ask\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.AskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Mid {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.MidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mid\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.MidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Closed {
                get {
                    try {
                        return ((bool)(this[this.tablePortfolio.ClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Closed\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.ClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingPrice {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.ClosingPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingPrice\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.ClosingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Delta {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.DeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delta\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.DeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Gamma {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.GammaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gamma\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.GammaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Theta {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.ThetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Theta\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.ThetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Vega {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.VegaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vega\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.VegaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ImpliedVol {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.ImpliedVolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImpliedVol\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.ImpliedVolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DeltaUSD {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.DeltaUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeltaUSD\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.DeltaUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GammaUSD {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.GammaUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GammaUSD\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.GammaUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _100DeltaUSD {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio._100DeltaUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'100DeltaUSD\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio._100DeltaUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThetaAnnualized {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.ThetaAnnualizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThetaAnnualized\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.ThetaAnnualizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TimePremium {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.TimePremiumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimePremium\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.TimePremiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePortfolio.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StrikePrice {
                get {
                    try {
                        return ((decimal)(this[this.tablePortfolio.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionType {
                get {
                    try {
                        return ((string)(this[this.tablePortfolio.OptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionType\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.OptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tablePortfolio.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Multiplier {
                get {
                    try {
                        return ((short)(this[this.tablePortfolio.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStock {
                get {
                    try {
                        return ((bool)(this[this.tablePortfolio.IsStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsStock\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.IsStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOption {
                get {
                    try {
                        return ((bool)(this[this.tablePortfolio.IsOptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOption\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.IsOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuture {
                get {
                    try {
                        return ((bool)(this[this.tablePortfolio.IsFutureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFuture\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.IsFutureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutOfBounds {
                get {
                    try {
                        return ((bool)(this[this.tablePortfolio.IsOutOfBoundsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOutOfBounds\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.IsOutOfBoundsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubscriptionStatus {
                get {
                    try {
                        return ((string)(this[this.tablePortfolio.SubscriptionStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubscriptionStatus\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.SubscriptionStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan UpdateTime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tablePortfolio.UpdateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateTime\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.UpdateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Performance {
                get {
                    try {
                        return ((double)(this[this.tablePortfolio.PerformanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Performance\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.PerformanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NettingAdjustment {
                get {
                    try {
                        return ((int)(this[this.tablePortfolio.NettingAdjustmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettingAdjustment\' in table \'Portfolio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolio.NettingAdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSOD_PositionNull() {
                return this.IsNull(this.tablePortfolio.SOD_PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSOD_PositionNull() {
                this[this.tablePortfolio.SOD_PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSOD_PriceNull() {
                return this.IsNull(this.tablePortfolio.SOD_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSOD_PriceNull() {
                this[this.tablePortfolio.SOD_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSOD_Market_ValueNull() {
                return this.IsNull(this.tablePortfolio.SOD_Market_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSOD_Market_ValueNull() {
                this[this.tablePortfolio.SOD_Market_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChange_in_PositionNull() {
                return this.IsNull(this.tablePortfolio.Change_in_PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChange_in_PositionNull() {
                this[this.tablePortfolio.Change_in_PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChange_in_CostNull() {
                return this.IsNull(this.tablePortfolio.Change_in_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChange_in_CostNull() {
                this[this.tablePortfolio.Change_in_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_PositionNull() {
                return this.IsNull(this.tablePortfolio.Current_PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_PositionNull() {
                this[this.tablePortfolio.Current_PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_PriceNull() {
                return this.IsNull(this.tablePortfolio.Current_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_PriceNull() {
                this[this.tablePortfolio.Current_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_CostNull() {
                return this.IsNull(this.tablePortfolio.Current_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_CostNull() {
                this[this.tablePortfolio.Current_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_Market_ValueNull() {
                return this.IsNull(this.tablePortfolio.Current_Market_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_Market_ValueNull() {
                this[this.tablePortfolio.Current_Market_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP_and_LNull() {
                return this.IsNull(this.tablePortfolio.P_and_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP_and_LNull() {
                this[this.tablePortfolio.P_and_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpenNull() {
                return this.IsNull(this.tablePortfolio.OpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpenNull() {
                this[this.tablePortfolio.OpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevCloseNull() {
                return this.IsNull(this.tablePortfolio.PrevCloseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevCloseNull() {
                this[this.tablePortfolio.PrevCloseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPriceNull() {
                return this.IsNull(this.tablePortfolio.LastPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPriceNull() {
                this[this.tablePortfolio.LastPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBidNull() {
                return this.IsNull(this.tablePortfolio.BidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBidNull() {
                this[this.tablePortfolio.BidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAskNull() {
                return this.IsNull(this.tablePortfolio.AskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAskNull() {
                this[this.tablePortfolio.AskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMidNull() {
                return this.IsNull(this.tablePortfolio.MidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMidNull() {
                this[this.tablePortfolio.MidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosedNull() {
                return this.IsNull(this.tablePortfolio.ClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosedNull() {
                this[this.tablePortfolio.ClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingPriceNull() {
                return this.IsNull(this.tablePortfolio.ClosingPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingPriceNull() {
                this[this.tablePortfolio.ClosingPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeltaNull() {
                return this.IsNull(this.tablePortfolio.DeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeltaNull() {
                this[this.tablePortfolio.DeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGammaNull() {
                return this.IsNull(this.tablePortfolio.GammaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGammaNull() {
                this[this.tablePortfolio.GammaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThetaNull() {
                return this.IsNull(this.tablePortfolio.ThetaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThetaNull() {
                this[this.tablePortfolio.ThetaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVegaNull() {
                return this.IsNull(this.tablePortfolio.VegaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVegaNull() {
                this[this.tablePortfolio.VegaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImpliedVolNull() {
                return this.IsNull(this.tablePortfolio.ImpliedVolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImpliedVolNull() {
                this[this.tablePortfolio.ImpliedVolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeltaUSDNull() {
                return this.IsNull(this.tablePortfolio.DeltaUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeltaUSDNull() {
                this[this.tablePortfolio.DeltaUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGammaUSDNull() {
                return this.IsNull(this.tablePortfolio.GammaUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGammaUSDNull() {
                this[this.tablePortfolio.GammaUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_100DeltaUSDNull() {
                return this.IsNull(this.tablePortfolio._100DeltaUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_100DeltaUSDNull() {
                this[this.tablePortfolio._100DeltaUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThetaAnnualizedNull() {
                return this.IsNull(this.tablePortfolio.ThetaAnnualizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThetaAnnualizedNull() {
                this[this.tablePortfolio.ThetaAnnualizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimePremiumNull() {
                return this.IsNull(this.tablePortfolio.TimePremiumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimePremiumNull() {
                this[this.tablePortfolio.TimePremiumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tablePortfolio.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tablePortfolio.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tablePortfolio.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tablePortfolio.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNull() {
                return this.IsNull(this.tablePortfolio.OptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNull() {
                this[this.tablePortfolio.OptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tablePortfolio.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tablePortfolio.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tablePortfolio.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMultiplierNull() {
                this[this.tablePortfolio.MultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsStockNull() {
                return this.IsNull(this.tablePortfolio.IsStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsStockNull() {
                this[this.tablePortfolio.IsStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOptionNull() {
                return this.IsNull(this.tablePortfolio.IsOptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOptionNull() {
                this[this.tablePortfolio.IsOptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsFutureNull() {
                return this.IsNull(this.tablePortfolio.IsFutureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsFutureNull() {
                this[this.tablePortfolio.IsFutureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOutOfBoundsNull() {
                return this.IsNull(this.tablePortfolio.IsOutOfBoundsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOutOfBoundsNull() {
                this[this.tablePortfolio.IsOutOfBoundsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubscriptionStatusNull() {
                return this.IsNull(this.tablePortfolio.SubscriptionStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubscriptionStatusNull() {
                this[this.tablePortfolio.SubscriptionStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateTimeNull() {
                return this.IsNull(this.tablePortfolio.UpdateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateTimeNull() {
                this[this.tablePortfolio.UpdateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerformanceNull() {
                return this.IsNull(this.tablePortfolio.PerformanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerformanceNull() {
                this[this.tablePortfolio.PerformanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNettingAdjustmentNull() {
                return this.IsNull(this.tablePortfolio.NettingAdjustmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNettingAdjustmentNull() {
                this[this.tablePortfolio.NettingAdjustmentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BlotterRow : global::System.Data.DataRow {
            
            private BlotterDataTable tableBlotter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BlotterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBlotter = ((BlotterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tableBlotter.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbol {
                get {
                    try {
                        return ((string)(this[this.tableBlotter.SymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Symbol\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.SymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBlotter.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StrikePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableBlotter.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionType {
                get {
                    try {
                        return ((string)(this[this.tableBlotter.OptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionType\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.OptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeType {
                get {
                    try {
                        return ((string)(this[this.tableBlotter.TradeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeType\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.TradeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableBlotter.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableBlotter.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Cost {
                get {
                    try {
                        return ((double)(this[this.tableBlotter.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cost\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableBlotter.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Multiplier {
                get {
                    try {
                        return ((short)(this[this.tableBlotter.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStock {
                get {
                    try {
                        return ((bool)(this[this.tableBlotter.IsStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsStock\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.IsStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOption {
                get {
                    try {
                        return ((bool)(this[this.tableBlotter.IsOptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOption\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.IsOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuture {
                get {
                    try {
                        return ((bool)(this[this.tableBlotter.IsFutureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFuture\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.IsFutureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan TradeTime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableBlotter.TradeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeTime\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.TradeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeSource {
                get {
                    return ((string)(this[this.tableBlotter.TradeSourceColumn]));
                }
                set {
                    this[this.tableBlotter.TradeSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeId {
                get {
                    return ((int)(this[this.tableBlotter.TradeIdColumn]));
                }
                set {
                    this[this.tableBlotter.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentMarketPrice {
                get {
                    try {
                        return ((double)(this[this.tableBlotter.CurrentMarketPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentMarketPrice\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.CurrentMarketPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PandL {
                get {
                    try {
                        return ((double)(this[this.tableBlotter.PandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PandL\' in table \'Blotter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlotter.PandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tableBlotter.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountNameNull() {
                this[this.tableBlotter.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSymbolNull() {
                return this.IsNull(this.tableBlotter.SymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSymbolNull() {
                this[this.tableBlotter.SymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableBlotter.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableBlotter.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableBlotter.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableBlotter.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNull() {
                return this.IsNull(this.tableBlotter.OptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNull() {
                this[this.tableBlotter.OptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeTypeNull() {
                return this.IsNull(this.tableBlotter.TradeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeTypeNull() {
                this[this.tableBlotter.TradeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableBlotter.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableBlotter.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceNull() {
                return this.IsNull(this.tableBlotter.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceNull() {
                this[this.tableBlotter.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostNull() {
                return this.IsNull(this.tableBlotter.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostNull() {
                this[this.tableBlotter.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableBlotter.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableBlotter.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tableBlotter.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMultiplierNull() {
                this[this.tableBlotter.MultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsStockNull() {
                return this.IsNull(this.tableBlotter.IsStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsStockNull() {
                this[this.tableBlotter.IsStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOptionNull() {
                return this.IsNull(this.tableBlotter.IsOptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOptionNull() {
                this[this.tableBlotter.IsOptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsFutureNull() {
                return this.IsNull(this.tableBlotter.IsFutureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsFutureNull() {
                this[this.tableBlotter.IsFutureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeTimeNull() {
                return this.IsNull(this.tableBlotter.TradeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeTimeNull() {
                this[this.tableBlotter.TradeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentMarketPriceNull() {
                return this.IsNull(this.tableBlotter.CurrentMarketPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentMarketPriceNull() {
                this[this.tableBlotter.CurrentMarketPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPandLNull() {
                return this.IsNull(this.tableBlotter.PandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPandLNull() {
                this[this.tableBlotter.PandLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AccountDataRow : global::System.Data.DataRow {
            
            private AccountDataDataTable tableAccountData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccountDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccountData = ((AccountDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EquityType {
                get {
                    try {
                        return ((string)(this[this.tableAccountData.EquityTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EquityType\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.EquityTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientType {
                get {
                    try {
                        return ((string)(this[this.tableAccountData.ClientTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientType\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.ClientTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTest {
                get {
                    try {
                        return ((bool)(this[this.tableAccountData.IsTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTest\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.IsTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BaseEquity {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.BaseEquityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseEquity\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.BaseEquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BaseCash {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.BaseCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseCash\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.BaseCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAccountData.BaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseDate\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.BaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InflowsSinceBaseDate {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.InflowsSinceBaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InflowsSinceBaseDate\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.InflowsSinceBaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TodaysInflows {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.TodaysInflowsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TodaysInflows\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.TodaysInflowsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PandLSinceBaseDate {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.PandLSinceBaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PandLSinceBaseDate\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.PandLSinceBaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StartOfDayMarketValue {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.StartOfDayMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartOfDayMarketValue\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.StartOfDayMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StartOfDayEquity {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.StartOfDayEquityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartOfDayEquity\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.StartOfDayEquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AvailableCash {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.AvailableCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvailableCash\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.AvailableCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentMarketValue {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.CurrentMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentMarketValue\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.CurrentMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentEquity {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.CurrentEquityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentEquity\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.CurrentEquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentCash {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.CurrentCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentCash\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.CurrentCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinDelta {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.MinDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinDelta\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.MinDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxDelta {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.MaxDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDelta\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.MaxDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TargetDelta {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.TargetDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDelta\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.TargetDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DeltaGoal {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.DeltaGoalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeltaGoal\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.DeltaGoalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Leverage {
                get {
                    try {
                        return ((decimal)(this[this.tableAccountData.LeverageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Leverage\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.LeverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentLeverage {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.CurrentLeverageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentLeverage\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.CurrentLeverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PutsPctTarget {
                get {
                    try {
                        return ((decimal)(this[this.tableAccountData.PutsPctTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsPctTarget\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.PutsPctTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan NextTradeTime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableAccountData.NextTradeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextTradeTime\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.NextTradeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Option_P_and_L {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.Option_P_and_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Option P and L\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.Option_P_and_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Stock_P_and_L {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.Stock_P_and_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stock P and L\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.Stock_P_and_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Futures_P_and_L {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.Futures_P_and_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Futures P and L\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.Futures_P_and_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Total_P_and_L {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.Total_P_and_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total P and L\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.Total_P_and_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DollarDeltasTraded {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.DollarDeltasTradedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DollarDeltasTraded\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.DollarDeltasTradedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DeltaPctTraded {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.DeltaPctTradedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeltaPctTraded\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.DeltaPctTradedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PutsTraded {
                get {
                    try {
                        return ((int)(this[this.tableAccountData.PutsTradedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsTraded\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.PutsTradedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PutsOutOfBounds {
                get {
                    try {
                        return ((bool)(this[this.tableAccountData.PutsOutOfBoundsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsOutOfBounds\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.PutsOutOfBoundsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PutsOutOfMoneyThreshold {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.PutsOutOfMoneyThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsOutOfMoneyThreshold\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.PutsOutOfMoneyThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TradingComplete {
                get {
                    try {
                        return ((bool)(this[this.tableAccountData.TradingCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradingComplete\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.TradingCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaximumCaks {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.MaximumCaksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaximumCaks\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.MaximumCaksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PortfolioPercentage {
                get {
                    try {
                        return ((double)(this[this.tableAccountData.PortfolioPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioPercentage\' in table \'AccountData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountData.PortfolioPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEquityTypeNull() {
                return this.IsNull(this.tableAccountData.EquityTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEquityTypeNull() {
                this[this.tableAccountData.EquityTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientTypeNull() {
                return this.IsNull(this.tableAccountData.ClientTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientTypeNull() {
                this[this.tableAccountData.ClientTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsTestNull() {
                return this.IsNull(this.tableAccountData.IsTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsTestNull() {
                this[this.tableAccountData.IsTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseEquityNull() {
                return this.IsNull(this.tableAccountData.BaseEquityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseEquityNull() {
                this[this.tableAccountData.BaseEquityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseCashNull() {
                return this.IsNull(this.tableAccountData.BaseCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseCashNull() {
                this[this.tableAccountData.BaseCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseDateNull() {
                return this.IsNull(this.tableAccountData.BaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseDateNull() {
                this[this.tableAccountData.BaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInflowsSinceBaseDateNull() {
                return this.IsNull(this.tableAccountData.InflowsSinceBaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInflowsSinceBaseDateNull() {
                this[this.tableAccountData.InflowsSinceBaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTodaysInflowsNull() {
                return this.IsNull(this.tableAccountData.TodaysInflowsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTodaysInflowsNull() {
                this[this.tableAccountData.TodaysInflowsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPandLSinceBaseDateNull() {
                return this.IsNull(this.tableAccountData.PandLSinceBaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPandLSinceBaseDateNull() {
                this[this.tableAccountData.PandLSinceBaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartOfDayMarketValueNull() {
                return this.IsNull(this.tableAccountData.StartOfDayMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartOfDayMarketValueNull() {
                this[this.tableAccountData.StartOfDayMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartOfDayEquityNull() {
                return this.IsNull(this.tableAccountData.StartOfDayEquityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartOfDayEquityNull() {
                this[this.tableAccountData.StartOfDayEquityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAvailableCashNull() {
                return this.IsNull(this.tableAccountData.AvailableCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAvailableCashNull() {
                this[this.tableAccountData.AvailableCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentMarketValueNull() {
                return this.IsNull(this.tableAccountData.CurrentMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentMarketValueNull() {
                this[this.tableAccountData.CurrentMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentEquityNull() {
                return this.IsNull(this.tableAccountData.CurrentEquityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentEquityNull() {
                this[this.tableAccountData.CurrentEquityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentCashNull() {
                return this.IsNull(this.tableAccountData.CurrentCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentCashNull() {
                this[this.tableAccountData.CurrentCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinDeltaNull() {
                return this.IsNull(this.tableAccountData.MinDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinDeltaNull() {
                this[this.tableAccountData.MinDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDeltaNull() {
                return this.IsNull(this.tableAccountData.MaxDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDeltaNull() {
                this[this.tableAccountData.MaxDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDeltaNull() {
                return this.IsNull(this.tableAccountData.TargetDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDeltaNull() {
                this[this.tableAccountData.TargetDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeltaGoalNull() {
                return this.IsNull(this.tableAccountData.DeltaGoalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeltaGoalNull() {
                this[this.tableAccountData.DeltaGoalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLeverageNull() {
                return this.IsNull(this.tableAccountData.LeverageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLeverageNull() {
                this[this.tableAccountData.LeverageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentLeverageNull() {
                return this.IsNull(this.tableAccountData.CurrentLeverageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentLeverageNull() {
                this[this.tableAccountData.CurrentLeverageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsPctTargetNull() {
                return this.IsNull(this.tableAccountData.PutsPctTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsPctTargetNull() {
                this[this.tableAccountData.PutsPctTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNextTradeTimeNull() {
                return this.IsNull(this.tableAccountData.NextTradeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNextTradeTimeNull() {
                this[this.tableAccountData.NextTradeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOption_P_and_LNull() {
                return this.IsNull(this.tableAccountData.Option_P_and_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOption_P_and_LNull() {
                this[this.tableAccountData.Option_P_and_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStock_P_and_LNull() {
                return this.IsNull(this.tableAccountData.Stock_P_and_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStock_P_and_LNull() {
                this[this.tableAccountData.Stock_P_and_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFutures_P_and_LNull() {
                return this.IsNull(this.tableAccountData.Futures_P_and_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFutures_P_and_LNull() {
                this[this.tableAccountData.Futures_P_and_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_P_and_LNull() {
                return this.IsNull(this.tableAccountData.Total_P_and_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_P_and_LNull() {
                this[this.tableAccountData.Total_P_and_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDollarDeltasTradedNull() {
                return this.IsNull(this.tableAccountData.DollarDeltasTradedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDollarDeltasTradedNull() {
                this[this.tableAccountData.DollarDeltasTradedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeltaPctTradedNull() {
                return this.IsNull(this.tableAccountData.DeltaPctTradedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeltaPctTradedNull() {
                this[this.tableAccountData.DeltaPctTradedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsTradedNull() {
                return this.IsNull(this.tableAccountData.PutsTradedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsTradedNull() {
                this[this.tableAccountData.PutsTradedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsOutOfBoundsNull() {
                return this.IsNull(this.tableAccountData.PutsOutOfBoundsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsOutOfBoundsNull() {
                this[this.tableAccountData.PutsOutOfBoundsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsOutOfMoneyThresholdNull() {
                return this.IsNull(this.tableAccountData.PutsOutOfMoneyThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsOutOfMoneyThresholdNull() {
                this[this.tableAccountData.PutsOutOfMoneyThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradingCompleteNull() {
                return this.IsNull(this.tableAccountData.TradingCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradingCompleteNull() {
                this[this.tableAccountData.TradingCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaximumCaksNull() {
                return this.IsNull(this.tableAccountData.MaximumCaksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaximumCaksNull() {
                this[this.tableAccountData.MaximumCaksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPortfolioPercentageNull() {
                return this.IsNull(this.tableAccountData.PortfolioPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPortfolioPercentageNull() {
                this[this.tableAccountData.PortfolioPercentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IndicesRow : global::System.Data.DataRow {
            
            private IndicesDataTable tableIndices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IndicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIndices = ((IndicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbol {
                get {
                    return ((string)(this[this.tableIndices.SymbolColumn]));
                }
                set {
                    this[this.tableIndices.SymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Weight {
                get {
                    try {
                        return ((decimal)(this[this.tableIndices.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Open {
                get {
                    try {
                        return ((double)(this[this.tableIndices.OpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Open\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.OpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrevClose {
                get {
                    try {
                        return ((double)(this[this.tableIndices.PrevCloseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevClose\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.PrevCloseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LastPrice {
                get {
                    try {
                        return ((double)(this[this.tableIndices.LastPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPrice\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.LastPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TargetValue {
                get {
                    try {
                        return ((double)(this[this.tableIndices.TargetValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetValue\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.TargetValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalDeltaPct {
                get {
                    try {
                        return ((double)(this[this.tableIndices.TotalDeltaPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDeltaPct\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.TotalDeltaPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CallDeltaPct {
                get {
                    try {
                        return ((double)(this[this.tableIndices.CallDeltaPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallDeltaPct\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.CallDeltaPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PutDeltaPct {
                get {
                    try {
                        return ((double)(this[this.tableIndices.PutDeltaPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutDeltaPct\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.PutDeltaPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FaceValuePutsPct {
                get {
                    try {
                        return ((double)(this[this.tableIndices.FaceValuePutsPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaceValuePutsPct\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.FaceValuePutsPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShortPct {
                get {
                    try {
                        return ((double)(this[this.tableIndices.ShortPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortPct\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.ShortPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TimePremium {
                get {
                    try {
                        return ((double)(this[this.tableIndices.TimePremiumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimePremium\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.TimePremiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Caks {
                get {
                    try {
                        return ((double)(this[this.tableIndices.CaksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Caks\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.CaksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GammaPct {
                get {
                    try {
                        return ((double)(this[this.tableIndices.GammaPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GammaPct\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.GammaPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThetaAnnualized {
                get {
                    try {
                        return ((double)(this[this.tableIndices.ThetaAnnualizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThetaAnnualized\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.ThetaAnnualizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DeltasToTrade {
                get {
                    try {
                        return ((double)(this[this.tableIndices.DeltasToTradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeltasToTrade\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.DeltasToTradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PutsToRebalance {
                get {
                    try {
                        return ((int)(this[this.tableIndices.PutsToRebalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsToRebalance\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.PutsToRebalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PutsToTrade {
                get {
                    try {
                        return ((int)(this[this.tableIndices.PutsToTradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsToTrade\' in table \'Indices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndices.PutsToTradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tableIndices.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightNull() {
                this[this.tableIndices.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpenNull() {
                return this.IsNull(this.tableIndices.OpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpenNull() {
                this[this.tableIndices.OpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevCloseNull() {
                return this.IsNull(this.tableIndices.PrevCloseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevCloseNull() {
                this[this.tableIndices.PrevCloseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPriceNull() {
                return this.IsNull(this.tableIndices.LastPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPriceNull() {
                this[this.tableIndices.LastPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetValueNull() {
                return this.IsNull(this.tableIndices.TargetValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetValueNull() {
                this[this.tableIndices.TargetValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDeltaPctNull() {
                return this.IsNull(this.tableIndices.TotalDeltaPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDeltaPctNull() {
                this[this.tableIndices.TotalDeltaPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallDeltaPctNull() {
                return this.IsNull(this.tableIndices.CallDeltaPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallDeltaPctNull() {
                this[this.tableIndices.CallDeltaPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutDeltaPctNull() {
                return this.IsNull(this.tableIndices.PutDeltaPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutDeltaPctNull() {
                this[this.tableIndices.PutDeltaPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaceValuePutsPctNull() {
                return this.IsNull(this.tableIndices.FaceValuePutsPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaceValuePutsPctNull() {
                this[this.tableIndices.FaceValuePutsPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortPctNull() {
                return this.IsNull(this.tableIndices.ShortPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortPctNull() {
                this[this.tableIndices.ShortPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimePremiumNull() {
                return this.IsNull(this.tableIndices.TimePremiumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimePremiumNull() {
                this[this.tableIndices.TimePremiumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCaksNull() {
                return this.IsNull(this.tableIndices.CaksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCaksNull() {
                this[this.tableIndices.CaksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGammaPctNull() {
                return this.IsNull(this.tableIndices.GammaPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGammaPctNull() {
                this[this.tableIndices.GammaPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThetaAnnualizedNull() {
                return this.IsNull(this.tableIndices.ThetaAnnualizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThetaAnnualizedNull() {
                this[this.tableIndices.ThetaAnnualizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeltasToTradeNull() {
                return this.IsNull(this.tableIndices.DeltasToTradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeltasToTradeNull() {
                this[this.tableIndices.DeltasToTradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsToRebalanceNull() {
                return this.IsNull(this.tableIndices.PutsToRebalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsToRebalanceNull() {
                this[this.tableIndices.PutsToRebalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsToTradeNull() {
                return this.IsNull(this.tableIndices.PutsToTradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsToTradeNull() {
                this[this.tableIndices.PutsToTradeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AccountSummaryRow : global::System.Data.DataRow {
            
            private AccountSummaryDataTable tableAccountSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccountSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccountSummary = ((AccountSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountName {
                get {
                    return ((string)(this[this.tableAccountSummary.AccountNameColumn]));
                }
                set {
                    this[this.tableAccountSummary.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ReturnOnEquity {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.ReturnOnEquityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnOnEquity\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.ReturnOnEquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Benchmark {
                get {
                    try {
                        return ((string)(this[this.tableAccountSummary.BenchmarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Benchmark\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.BenchmarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BenchmarkReturn {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.BenchmarkReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenchmarkReturn\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.BenchmarkReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TargetReturn {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.TargetReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetReturn\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.TargetReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OptionPandL {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.OptionPandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionPandL\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.OptionPandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StockPandL {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.StockPandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockPandL\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.StockPandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FuturesPandL {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.FuturesPandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuturesPandL\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.FuturesPandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalPandL {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.TotalPandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPandL\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.TotalPandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinDelta {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.MinDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinDelta\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.MinDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxDelta {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.MaxDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDelta\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.MaxDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TargetDelta {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.TargetDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDelta\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.TargetDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalDeltaPct {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.TotalDeltaPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDeltaPct\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.TotalDeltaPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PutsToTrade {
                get {
                    try {
                        return ((int)(this[this.tableAccountSummary.PutsToTradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsToTrade\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.PutsToTradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PutsOutOfBounds {
                get {
                    try {
                        return ((bool)(this[this.tableAccountSummary.PutsOutOfBoundsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PutsOutOfBounds\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.PutsOutOfBoundsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan NextTradeTime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableAccountSummary.NextTradeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextTradeTime\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.NextTradeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TradingComplete {
                get {
                    try {
                        return ((bool)(this[this.tableAccountSummary.TradingCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradingComplete\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.TradingCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GrossReturnMTD {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.GrossReturnMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossReturnMTD\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.GrossReturnMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetReturnMTD {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.NetReturnMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetReturnMTD\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.NetReturnMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BenchmarkReturnMTD {
                get {
                    try {
                        return ((double)(this[this.tableAccountSummary.BenchmarkReturnMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenchmarkReturnMTD\' in table \'AccountSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccountSummary.BenchmarkReturnMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnOnEquityNull() {
                return this.IsNull(this.tableAccountSummary.ReturnOnEquityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnOnEquityNull() {
                this[this.tableAccountSummary.ReturnOnEquityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenchmarkNull() {
                return this.IsNull(this.tableAccountSummary.BenchmarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenchmarkNull() {
                this[this.tableAccountSummary.BenchmarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenchmarkReturnNull() {
                return this.IsNull(this.tableAccountSummary.BenchmarkReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenchmarkReturnNull() {
                this[this.tableAccountSummary.BenchmarkReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetReturnNull() {
                return this.IsNull(this.tableAccountSummary.TargetReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetReturnNull() {
                this[this.tableAccountSummary.TargetReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionPandLNull() {
                return this.IsNull(this.tableAccountSummary.OptionPandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionPandLNull() {
                this[this.tableAccountSummary.OptionPandLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockPandLNull() {
                return this.IsNull(this.tableAccountSummary.StockPandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockPandLNull() {
                this[this.tableAccountSummary.StockPandLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuturesPandLNull() {
                return this.IsNull(this.tableAccountSummary.FuturesPandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuturesPandLNull() {
                this[this.tableAccountSummary.FuturesPandLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPandLNull() {
                return this.IsNull(this.tableAccountSummary.TotalPandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPandLNull() {
                this[this.tableAccountSummary.TotalPandLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinDeltaNull() {
                return this.IsNull(this.tableAccountSummary.MinDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinDeltaNull() {
                this[this.tableAccountSummary.MinDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDeltaNull() {
                return this.IsNull(this.tableAccountSummary.MaxDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDeltaNull() {
                this[this.tableAccountSummary.MaxDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDeltaNull() {
                return this.IsNull(this.tableAccountSummary.TargetDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDeltaNull() {
                this[this.tableAccountSummary.TargetDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDeltaPctNull() {
                return this.IsNull(this.tableAccountSummary.TotalDeltaPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDeltaPctNull() {
                this[this.tableAccountSummary.TotalDeltaPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsToTradeNull() {
                return this.IsNull(this.tableAccountSummary.PutsToTradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsToTradeNull() {
                this[this.tableAccountSummary.PutsToTradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPutsOutOfBoundsNull() {
                return this.IsNull(this.tableAccountSummary.PutsOutOfBoundsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPutsOutOfBoundsNull() {
                this[this.tableAccountSummary.PutsOutOfBoundsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNextTradeTimeNull() {
                return this.IsNull(this.tableAccountSummary.NextTradeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNextTradeTimeNull() {
                this[this.tableAccountSummary.NextTradeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradingCompleteNull() {
                return this.IsNull(this.tableAccountSummary.TradingCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradingCompleteNull() {
                this[this.tableAccountSummary.TradingCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossReturnMTDNull() {
                return this.IsNull(this.tableAccountSummary.GrossReturnMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossReturnMTDNull() {
                this[this.tableAccountSummary.GrossReturnMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetReturnMTDNull() {
                return this.IsNull(this.tableAccountSummary.NetReturnMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetReturnMTDNull() {
                this[this.tableAccountSummary.NetReturnMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenchmarkReturnMTDNull() {
                return this.IsNull(this.tableAccountSummary.BenchmarkReturnMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenchmarkReturnMTDNull() {
                this[this.tableAccountSummary.BenchmarkReturnMTDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StressTestRow : global::System.Data.DataRow {
            
            private StressTestDataTable tableStressTest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StressTestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStressTest = ((StressTestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountName {
                get {
                    return ((string)(this[this.tableStressTest.AccountNameColumn]));
                }
                set {
                    this[this.tableStressTest.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbol {
                get {
                    return ((string)(this[this.tableStressTest.SymbolColumn]));
                }
                set {
                    this[this.tableStressTest.SymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Current_Position {
                get {
                    try {
                        return ((int)(this[this.tableStressTest.Current_PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Position\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.Current_PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Current_Price {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.Current_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Price\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.Current_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Current_Theoretical {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.Current_TheoreticalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Theoretical\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.Current_TheoreticalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double New_Theoretical {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.New_TheoreticalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'New Theoretical\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.New_TheoreticalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Current_Market_Value {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.Current_Market_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Market Value\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.Current_Market_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double New_Market_Value {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.New_Market_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'New Market Value\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.New_Market_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double P_and_L {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.P_and_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P and L\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.P_and_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Delta {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.DeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delta\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.DeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ImpliedVol {
                get {
                    try {
                        return ((double)(this[this.tableStressTest.ImpliedVolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImpliedVol\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.ImpliedVolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStressTest.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StrikePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableStressTest.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionType {
                get {
                    try {
                        return ((string)(this[this.tableStressTest.OptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionType\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.OptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableStressTest.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Multiplier {
                get {
                    try {
                        return ((short)(this[this.tableStressTest.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStock {
                get {
                    try {
                        return ((bool)(this[this.tableStressTest.IsStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsStock\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.IsStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOption {
                get {
                    try {
                        return ((bool)(this[this.tableStressTest.IsOptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOption\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.IsOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuture {
                get {
                    try {
                        return ((bool)(this[this.tableStressTest.IsFutureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFuture\' in table \'StressTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTest.IsFutureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_PositionNull() {
                return this.IsNull(this.tableStressTest.Current_PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_PositionNull() {
                this[this.tableStressTest.Current_PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_PriceNull() {
                return this.IsNull(this.tableStressTest.Current_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_PriceNull() {
                this[this.tableStressTest.Current_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_TheoreticalNull() {
                return this.IsNull(this.tableStressTest.Current_TheoreticalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_TheoreticalNull() {
                this[this.tableStressTest.Current_TheoreticalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNew_TheoreticalNull() {
                return this.IsNull(this.tableStressTest.New_TheoreticalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNew_TheoreticalNull() {
                this[this.tableStressTest.New_TheoreticalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent_Market_ValueNull() {
                return this.IsNull(this.tableStressTest.Current_Market_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrent_Market_ValueNull() {
                this[this.tableStressTest.Current_Market_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNew_Market_ValueNull() {
                return this.IsNull(this.tableStressTest.New_Market_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNew_Market_ValueNull() {
                this[this.tableStressTest.New_Market_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP_and_LNull() {
                return this.IsNull(this.tableStressTest.P_and_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP_and_LNull() {
                this[this.tableStressTest.P_and_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeltaNull() {
                return this.IsNull(this.tableStressTest.DeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeltaNull() {
                this[this.tableStressTest.DeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImpliedVolNull() {
                return this.IsNull(this.tableStressTest.ImpliedVolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImpliedVolNull() {
                this[this.tableStressTest.ImpliedVolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableStressTest.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableStressTest.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableStressTest.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableStressTest.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNull() {
                return this.IsNull(this.tableStressTest.OptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNull() {
                this[this.tableStressTest.OptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableStressTest.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableStressTest.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tableStressTest.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMultiplierNull() {
                this[this.tableStressTest.MultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsStockNull() {
                return this.IsNull(this.tableStressTest.IsStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsStockNull() {
                this[this.tableStressTest.IsStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOptionNull() {
                return this.IsNull(this.tableStressTest.IsOptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOptionNull() {
                this[this.tableStressTest.IsOptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsFutureNull() {
                return this.IsNull(this.tableStressTest.IsFutureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsFutureNull() {
                this[this.tableStressTest.IsFutureColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StressTestSummaryRow : global::System.Data.DataRow {
            
            private StressTestSummaryDataTable tableStressTestSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StressTestSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStressTestSummary = ((StressTestSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RiskFreeInterestRate {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.RiskFreeInterestRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskFreeInterestRate\' in table \'StressTestSummary\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.RiskFreeInterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ChangeInMarket {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.ChangeInMarketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangeInMarket\' in table \'StressTestSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.ChangeInMarketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ChangeInVolatility {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.ChangeInVolatilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangeInVolatility\' in table \'StressTestSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.ChangeInVolatilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentEquity {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.CurrentEquityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentEquity\' in table \'StressTestSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.CurrentEquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentMarketValue {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.CurrentMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentMarketValue\' in table \'StressTestSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.CurrentMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NewMarketValue {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.NewMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewMarketValue\' in table \'StressTestSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.NewMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PandL {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.PandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PandL\' in table \'StressTestSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.PandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PercentPandL {
                get {
                    try {
                        return ((double)(this[this.tableStressTestSummary.PercentPandLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentPandL\' in table \'StressTestSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStressTestSummary.PercentPandLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRiskFreeInterestRateNull() {
                return this.IsNull(this.tableStressTestSummary.RiskFreeInterestRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRiskFreeInterestRateNull() {
                this[this.tableStressTestSummary.RiskFreeInterestRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChangeInMarketNull() {
                return this.IsNull(this.tableStressTestSummary.ChangeInMarketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChangeInMarketNull() {
                this[this.tableStressTestSummary.ChangeInMarketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChangeInVolatilityNull() {
                return this.IsNull(this.tableStressTestSummary.ChangeInVolatilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChangeInVolatilityNull() {
                this[this.tableStressTestSummary.ChangeInVolatilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentEquityNull() {
                return this.IsNull(this.tableStressTestSummary.CurrentEquityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentEquityNull() {
                this[this.tableStressTestSummary.CurrentEquityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentMarketValueNull() {
                return this.IsNull(this.tableStressTestSummary.CurrentMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentMarketValueNull() {
                this[this.tableStressTestSummary.CurrentMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNewMarketValueNull() {
                return this.IsNull(this.tableStressTestSummary.NewMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNewMarketValueNull() {
                this[this.tableStressTestSummary.NewMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPandLNull() {
                return this.IsNull(this.tableStressTestSummary.PandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPandLNull() {
                this[this.tableStressTestSummary.PandLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentPandLNull() {
                return this.IsNull(this.tableStressTestSummary.PercentPandLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentPandLNull() {
                this[this.tableStressTestSummary.PercentPandLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PortfolioRowChangeEvent : global::System.EventArgs {
            
            private PortfolioRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioRowChangeEvent(PortfolioRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BlotterRowChangeEvent : global::System.EventArgs {
            
            private BlotterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BlotterRowChangeEvent(BlotterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BlotterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AccountDataRowChangeEvent : global::System.EventArgs {
            
            private AccountDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountDataRowChangeEvent(AccountDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class IndicesRowChangeEvent : global::System.EventArgs {
            
            private IndicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesRowChangeEvent(IndicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AccountSummaryRowChangeEvent : global::System.EventArgs {
            
            private AccountSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryRowChangeEvent(AccountSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StressTestRowChangeEvent : global::System.EventArgs {
            
            private StressTestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestRowChangeEvent(StressTestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StressTestSummaryRowChangeEvent : global::System.EventArgs {
            
            private StressTestSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestSummaryRowChangeEvent(StressTestSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StressTestSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
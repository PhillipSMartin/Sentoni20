//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SentoniClient.SentoniServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSummary", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class AccountSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenchmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BenchmarkReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BenchmarkReturnMTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FuturesPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GrossReturnMTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NetReturnMTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> NextTradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OptionPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PutsOutOfBoundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PutsToTradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReturnOnEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StockPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TargetDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TargetReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalDeltaPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TradingCompleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkReturn {
            get {
                return this.BenchmarkReturnField;
            }
            set {
                if ((this.BenchmarkReturnField.Equals(value) != true)) {
                    this.BenchmarkReturnField = value;
                    this.RaisePropertyChanged("BenchmarkReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkReturnMTD {
            get {
                return this.BenchmarkReturnMTDField;
            }
            set {
                if ((this.BenchmarkReturnMTDField.Equals(value) != true)) {
                    this.BenchmarkReturnMTDField = value;
                    this.RaisePropertyChanged("BenchmarkReturnMTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FuturesPandL {
            get {
                return this.FuturesPandLField;
            }
            set {
                if ((this.FuturesPandLField.Equals(value) != true)) {
                    this.FuturesPandLField = value;
                    this.RaisePropertyChanged("FuturesPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossReturnMTD {
            get {
                return this.GrossReturnMTDField;
            }
            set {
                if ((this.GrossReturnMTDField.Equals(value) != true)) {
                    this.GrossReturnMTDField = value;
                    this.RaisePropertyChanged("GrossReturnMTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxDelta {
            get {
                return this.MaxDeltaField;
            }
            set {
                if ((this.MaxDeltaField.Equals(value) != true)) {
                    this.MaxDeltaField = value;
                    this.RaisePropertyChanged("MaxDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinDelta {
            get {
                return this.MinDeltaField;
            }
            set {
                if ((this.MinDeltaField.Equals(value) != true)) {
                    this.MinDeltaField = value;
                    this.RaisePropertyChanged("MinDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NetReturnMTD {
            get {
                return this.NetReturnMTDField;
            }
            set {
                if ((this.NetReturnMTDField.Equals(value) != true)) {
                    this.NetReturnMTDField = value;
                    this.RaisePropertyChanged("NetReturnMTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> NextTradeTime {
            get {
                return this.NextTradeTimeField;
            }
            set {
                if ((this.NextTradeTimeField.Equals(value) != true)) {
                    this.NextTradeTimeField = value;
                    this.RaisePropertyChanged("NextTradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OptionPandL {
            get {
                return this.OptionPandLField;
            }
            set {
                if ((this.OptionPandLField.Equals(value) != true)) {
                    this.OptionPandLField = value;
                    this.RaisePropertyChanged("OptionPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PutsOutOfBounds {
            get {
                return this.PutsOutOfBoundsField;
            }
            set {
                if ((this.PutsOutOfBoundsField.Equals(value) != true)) {
                    this.PutsOutOfBoundsField = value;
                    this.RaisePropertyChanged("PutsOutOfBounds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PutsToTrade {
            get {
                return this.PutsToTradeField;
            }
            set {
                if ((this.PutsToTradeField.Equals(value) != true)) {
                    this.PutsToTradeField = value;
                    this.RaisePropertyChanged("PutsToTrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnOnEquity {
            get {
                return this.ReturnOnEquityField;
            }
            set {
                if ((this.ReturnOnEquityField.Equals(value) != true)) {
                    this.ReturnOnEquityField = value;
                    this.RaisePropertyChanged("ReturnOnEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StockPandL {
            get {
                return this.StockPandLField;
            }
            set {
                if ((this.StockPandLField.Equals(value) != true)) {
                    this.StockPandLField = value;
                    this.RaisePropertyChanged("StockPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TargetDelta {
            get {
                return this.TargetDeltaField;
            }
            set {
                if ((this.TargetDeltaField.Equals(value) != true)) {
                    this.TargetDeltaField = value;
                    this.RaisePropertyChanged("TargetDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TargetReturn {
            get {
                return this.TargetReturnField;
            }
            set {
                if ((this.TargetReturnField.Equals(value) != true)) {
                    this.TargetReturnField = value;
                    this.RaisePropertyChanged("TargetReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalDeltaPct {
            get {
                return this.TotalDeltaPctField;
            }
            set {
                if ((this.TotalDeltaPctField.Equals(value) != true)) {
                    this.TotalDeltaPctField = value;
                    this.RaisePropertyChanged("TotalDeltaPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPandL {
            get {
                return this.TotalPandLField;
            }
            set {
                if ((this.TotalPandLField.Equals(value) != true)) {
                    this.TotalPandLField = value;
                    this.RaisePropertyChanged("TotalPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TradingComplete {
            get {
                return this.TradingCompleteField;
            }
            set {
                if ((this.TradingCompleteField.Equals(value) != true)) {
                    this.TradingCompleteField = value;
                    this.RaisePropertyChanged("TradingComplete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Portfolio", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class Portfolio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.AccountData AccountDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.Index BenchmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.Index[] IndicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.Position[] PositionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuoteServiceHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> QuoteServiceStoppedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.SnapshotType SnapshotTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.Snapshot[] SnapshotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnsubscribedSymbolsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.AccountData AccountData {
            get {
                return this.AccountDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDataField, value) != true)) {
                    this.AccountDataField = value;
                    this.RaisePropertyChanged("AccountData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.Index Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.Index[] Indices {
            get {
                return this.IndicesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicesField, value) != true)) {
                    this.IndicesField = value;
                    this.RaisePropertyChanged("Indices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.Position[] Positions {
            get {
                return this.PositionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionsField, value) != true)) {
                    this.PositionsField = value;
                    this.RaisePropertyChanged("Positions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuoteServiceHost {
            get {
                return this.QuoteServiceHostField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteServiceHostField, value) != true)) {
                    this.QuoteServiceHostField = value;
                    this.RaisePropertyChanged("QuoteServiceHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> QuoteServiceStoppedTime {
            get {
                return this.QuoteServiceStoppedTimeField;
            }
            set {
                if ((this.QuoteServiceStoppedTimeField.Equals(value) != true)) {
                    this.QuoteServiceStoppedTimeField = value;
                    this.RaisePropertyChanged("QuoteServiceStoppedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.SnapshotType SnapshotType {
            get {
                return this.SnapshotTypeField;
            }
            set {
                if ((this.SnapshotTypeField.Equals(value) != true)) {
                    this.SnapshotTypeField = value;
                    this.RaisePropertyChanged("SnapshotType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.Snapshot[] Snapshots {
            get {
                return this.SnapshotsField;
            }
            set {
                if ((object.ReferenceEquals(this.SnapshotsField, value) != true)) {
                    this.SnapshotsField = value;
                    this.RaisePropertyChanged("Snapshots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnsubscribedSymbols {
            get {
                return this.UnsubscribedSymbolsField;
            }
            set {
                if ((this.UnsubscribedSymbolsField.Equals(value) != true)) {
                    this.UnsubscribedSymbolsField = value;
                    this.RaisePropertyChanged("UnsubscribedSymbols");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountData", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class AccountData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AvailableCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BaseCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BaseEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenchmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentLeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentOLAPMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DeltaGoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DeltaPctTradedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DollarDeltasTradedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FuturesPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InflowsSinceBaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaximumCaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> NextTradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OptionPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PandLSinceBaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PortfolioPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PutsOutOfBoundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PutsOutOfMoneyThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PutsPctTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PutsTradedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartOfDayEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartOfDayMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StockPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TargetDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TodaysInflowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TradingCompleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AvailableCash {
            get {
                return this.AvailableCashField;
            }
            set {
                if ((this.AvailableCashField.Equals(value) != true)) {
                    this.AvailableCashField = value;
                    this.RaisePropertyChanged("AvailableCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BaseCash {
            get {
                return this.BaseCashField;
            }
            set {
                if ((this.BaseCashField.Equals(value) != true)) {
                    this.BaseCashField = value;
                    this.RaisePropertyChanged("BaseCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BaseDate {
            get {
                return this.BaseDateField;
            }
            set {
                if ((this.BaseDateField.Equals(value) != true)) {
                    this.BaseDateField = value;
                    this.RaisePropertyChanged("BaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BaseEquity {
            get {
                return this.BaseEquityField;
            }
            set {
                if ((this.BaseEquityField.Equals(value) != true)) {
                    this.BaseEquityField = value;
                    this.RaisePropertyChanged("BaseEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTypeField, value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentCash {
            get {
                return this.CurrentCashField;
            }
            set {
                if ((this.CurrentCashField.Equals(value) != true)) {
                    this.CurrentCashField = value;
                    this.RaisePropertyChanged("CurrentCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentEquity {
            get {
                return this.CurrentEquityField;
            }
            set {
                if ((this.CurrentEquityField.Equals(value) != true)) {
                    this.CurrentEquityField = value;
                    this.RaisePropertyChanged("CurrentEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentLeverage {
            get {
                return this.CurrentLeverageField;
            }
            set {
                if ((this.CurrentLeverageField.Equals(value) != true)) {
                    this.CurrentLeverageField = value;
                    this.RaisePropertyChanged("CurrentLeverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentMarketValue {
            get {
                return this.CurrentMarketValueField;
            }
            set {
                if ((this.CurrentMarketValueField.Equals(value) != true)) {
                    this.CurrentMarketValueField = value;
                    this.RaisePropertyChanged("CurrentMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentOLAPMarketValue {
            get {
                return this.CurrentOLAPMarketValueField;
            }
            set {
                if ((this.CurrentOLAPMarketValueField.Equals(value) != true)) {
                    this.CurrentOLAPMarketValueField = value;
                    this.RaisePropertyChanged("CurrentOLAPMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DeltaGoal {
            get {
                return this.DeltaGoalField;
            }
            set {
                if ((this.DeltaGoalField.Equals(value) != true)) {
                    this.DeltaGoalField = value;
                    this.RaisePropertyChanged("DeltaGoal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DeltaPctTraded {
            get {
                return this.DeltaPctTradedField;
            }
            set {
                if ((this.DeltaPctTradedField.Equals(value) != true)) {
                    this.DeltaPctTradedField = value;
                    this.RaisePropertyChanged("DeltaPctTraded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DollarDeltasTraded {
            get {
                return this.DollarDeltasTradedField;
            }
            set {
                if ((this.DollarDeltasTradedField.Equals(value) != true)) {
                    this.DollarDeltasTradedField = value;
                    this.RaisePropertyChanged("DollarDeltasTraded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquityType {
            get {
                return this.EquityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EquityTypeField, value) != true)) {
                    this.EquityTypeField = value;
                    this.RaisePropertyChanged("EquityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FuturesPandL {
            get {
                return this.FuturesPandLField;
            }
            set {
                if ((this.FuturesPandLField.Equals(value) != true)) {
                    this.FuturesPandLField = value;
                    this.RaisePropertyChanged("FuturesPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InflowsSinceBaseDate {
            get {
                return this.InflowsSinceBaseDateField;
            }
            set {
                if ((this.InflowsSinceBaseDateField.Equals(value) != true)) {
                    this.InflowsSinceBaseDateField = value;
                    this.RaisePropertyChanged("InflowsSinceBaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTest {
            get {
                return this.IsTestField;
            }
            set {
                if ((this.IsTestField.Equals(value) != true)) {
                    this.IsTestField = value;
                    this.RaisePropertyChanged("IsTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Leverage {
            get {
                return this.LeverageField;
            }
            set {
                if ((this.LeverageField.Equals(value) != true)) {
                    this.LeverageField = value;
                    this.RaisePropertyChanged("Leverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxDelta {
            get {
                return this.MaxDeltaField;
            }
            set {
                if ((this.MaxDeltaField.Equals(value) != true)) {
                    this.MaxDeltaField = value;
                    this.RaisePropertyChanged("MaxDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumCaks {
            get {
                return this.MaximumCaksField;
            }
            set {
                if ((this.MaximumCaksField.Equals(value) != true)) {
                    this.MaximumCaksField = value;
                    this.RaisePropertyChanged("MaximumCaks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinDelta {
            get {
                return this.MinDeltaField;
            }
            set {
                if ((this.MinDeltaField.Equals(value) != true)) {
                    this.MinDeltaField = value;
                    this.RaisePropertyChanged("MinDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> NextTradeTime {
            get {
                return this.NextTradeTimeField;
            }
            set {
                if ((this.NextTradeTimeField.Equals(value) != true)) {
                    this.NextTradeTimeField = value;
                    this.RaisePropertyChanged("NextTradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OptionPandL {
            get {
                return this.OptionPandLField;
            }
            set {
                if ((this.OptionPandLField.Equals(value) != true)) {
                    this.OptionPandLField = value;
                    this.RaisePropertyChanged("OptionPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PandLSinceBaseDate {
            get {
                return this.PandLSinceBaseDateField;
            }
            set {
                if ((this.PandLSinceBaseDateField.Equals(value) != true)) {
                    this.PandLSinceBaseDateField = value;
                    this.RaisePropertyChanged("PandLSinceBaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioPercentage {
            get {
                return this.PortfolioPercentageField;
            }
            set {
                if ((this.PortfolioPercentageField.Equals(value) != true)) {
                    this.PortfolioPercentageField = value;
                    this.RaisePropertyChanged("PortfolioPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PutsOutOfBounds {
            get {
                return this.PutsOutOfBoundsField;
            }
            set {
                if ((this.PutsOutOfBoundsField.Equals(value) != true)) {
                    this.PutsOutOfBoundsField = value;
                    this.RaisePropertyChanged("PutsOutOfBounds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PutsOutOfMoneyThreshold {
            get {
                return this.PutsOutOfMoneyThresholdField;
            }
            set {
                if ((this.PutsOutOfMoneyThresholdField.Equals(value) != true)) {
                    this.PutsOutOfMoneyThresholdField = value;
                    this.RaisePropertyChanged("PutsOutOfMoneyThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PutsPctTarget {
            get {
                return this.PutsPctTargetField;
            }
            set {
                if ((this.PutsPctTargetField.Equals(value) != true)) {
                    this.PutsPctTargetField = value;
                    this.RaisePropertyChanged("PutsPctTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PutsTraded {
            get {
                return this.PutsTradedField;
            }
            set {
                if ((this.PutsTradedField.Equals(value) != true)) {
                    this.PutsTradedField = value;
                    this.RaisePropertyChanged("PutsTraded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartOfDayEquity {
            get {
                return this.StartOfDayEquityField;
            }
            set {
                if ((this.StartOfDayEquityField.Equals(value) != true)) {
                    this.StartOfDayEquityField = value;
                    this.RaisePropertyChanged("StartOfDayEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartOfDayMarketValue {
            get {
                return this.StartOfDayMarketValueField;
            }
            set {
                if ((this.StartOfDayMarketValueField.Equals(value) != true)) {
                    this.StartOfDayMarketValueField = value;
                    this.RaisePropertyChanged("StartOfDayMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StockPandL {
            get {
                return this.StockPandLField;
            }
            set {
                if ((this.StockPandLField.Equals(value) != true)) {
                    this.StockPandLField = value;
                    this.RaisePropertyChanged("StockPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TargetDelta {
            get {
                return this.TargetDeltaField;
            }
            set {
                if ((this.TargetDeltaField.Equals(value) != true)) {
                    this.TargetDeltaField = value;
                    this.RaisePropertyChanged("TargetDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TodaysInflows {
            get {
                return this.TodaysInflowsField;
            }
            set {
                if ((this.TodaysInflowsField.Equals(value) != true)) {
                    this.TodaysInflowsField = value;
                    this.RaisePropertyChanged("TodaysInflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPandL {
            get {
                return this.TotalPandLField;
            }
            set {
                if ((this.TotalPandLField.Equals(value) != true)) {
                    this.TotalPandLField = value;
                    this.RaisePropertyChanged("TotalPandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TradingComplete {
            get {
                return this.TradingCompleteField;
            }
            set {
                if ((this.TradingCompleteField.Equals(value) != true)) {
                    this.TradingCompleteField = value;
                    this.RaisePropertyChanged("TradingComplete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Index", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class Index : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CallDeltaPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DeltasToTradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FaceValuePutsPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GammaPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LastPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrevCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PutDeltaPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PutsToRebalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PutsToTradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShortPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TargetValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThetaAnnualizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimePremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalDeltaPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Caks {
            get {
                return this.CaksField;
            }
            set {
                if ((this.CaksField.Equals(value) != true)) {
                    this.CaksField = value;
                    this.RaisePropertyChanged("Caks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CallDeltaPct {
            get {
                return this.CallDeltaPctField;
            }
            set {
                if ((this.CallDeltaPctField.Equals(value) != true)) {
                    this.CallDeltaPctField = value;
                    this.RaisePropertyChanged("CallDeltaPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DeltasToTrade {
            get {
                return this.DeltasToTradeField;
            }
            set {
                if ((this.DeltasToTradeField.Equals(value) != true)) {
                    this.DeltasToTradeField = value;
                    this.RaisePropertyChanged("DeltasToTrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FaceValuePutsPct {
            get {
                return this.FaceValuePutsPctField;
            }
            set {
                if ((this.FaceValuePutsPctField.Equals(value) != true)) {
                    this.FaceValuePutsPctField = value;
                    this.RaisePropertyChanged("FaceValuePutsPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GammaPct {
            get {
                return this.GammaPctField;
            }
            set {
                if ((this.GammaPctField.Equals(value) != true)) {
                    this.GammaPctField = value;
                    this.RaisePropertyChanged("GammaPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> LastPrice {
            get {
                return this.LastPriceField;
            }
            set {
                if ((this.LastPriceField.Equals(value) != true)) {
                    this.LastPriceField = value;
                    this.RaisePropertyChanged("LastPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PrevClose {
            get {
                return this.PrevCloseField;
            }
            set {
                if ((this.PrevCloseField.Equals(value) != true)) {
                    this.PrevCloseField = value;
                    this.RaisePropertyChanged("PrevClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PutDeltaPct {
            get {
                return this.PutDeltaPctField;
            }
            set {
                if ((this.PutDeltaPctField.Equals(value) != true)) {
                    this.PutDeltaPctField = value;
                    this.RaisePropertyChanged("PutDeltaPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PutsToRebalance {
            get {
                return this.PutsToRebalanceField;
            }
            set {
                if ((this.PutsToRebalanceField.Equals(value) != true)) {
                    this.PutsToRebalanceField = value;
                    this.RaisePropertyChanged("PutsToRebalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PutsToTrade {
            get {
                return this.PutsToTradeField;
            }
            set {
                if ((this.PutsToTradeField.Equals(value) != true)) {
                    this.PutsToTradeField = value;
                    this.RaisePropertyChanged("PutsToTrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShortPct {
            get {
                return this.ShortPctField;
            }
            set {
                if ((this.ShortPctField.Equals(value) != true)) {
                    this.ShortPctField = value;
                    this.RaisePropertyChanged("ShortPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TargetValue {
            get {
                return this.TargetValueField;
            }
            set {
                if ((this.TargetValueField.Equals(value) != true)) {
                    this.TargetValueField = value;
                    this.RaisePropertyChanged("TargetValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ThetaAnnualized {
            get {
                return this.ThetaAnnualizedField;
            }
            set {
                if ((this.ThetaAnnualizedField.Equals(value) != true)) {
                    this.ThetaAnnualizedField = value;
                    this.RaisePropertyChanged("ThetaAnnualized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimePremium {
            get {
                return this.TimePremiumField;
            }
            set {
                if ((this.TimePremiumField.Equals(value) != true)) {
                    this.TimePremiumField = value;
                    this.RaisePropertyChanged("TimePremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalDeltaPct {
            get {
                return this.TotalDeltaPctField;
            }
            set {
                if ((this.TotalDeltaPctField.Equals(value) != true)) {
                    this.TotalDeltaPctField = value;
                    this.RaisePropertyChanged("TotalDeltaPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ChangeInCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeInPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ClosingPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DeltaUSDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GammaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GammaUSDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ImpliedVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFutureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOutOfBoundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LastPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NettingAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrevCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SODMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SODPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SODPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StrikePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ThetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ThetaAnnualizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TimePremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnderlyingSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> VegaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> _100DeltaUSDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Ask {
            get {
                return this.AskField;
            }
            set {
                if ((this.AskField.Equals(value) != true)) {
                    this.AskField = value;
                    this.RaisePropertyChanged("Ask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Bid {
            get {
                return this.BidField;
            }
            set {
                if ((this.BidField.Equals(value) != true)) {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ChangeInCost {
            get {
                return this.ChangeInCostField;
            }
            set {
                if ((this.ChangeInCostField.Equals(value) != true)) {
                    this.ChangeInCostField = value;
                    this.RaisePropertyChanged("ChangeInCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeInPosition {
            get {
                return this.ChangeInPositionField;
            }
            set {
                if ((this.ChangeInPositionField.Equals(value) != true)) {
                    this.ChangeInPositionField = value;
                    this.RaisePropertyChanged("ChangeInPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Closed {
            get {
                return this.ClosedField;
            }
            set {
                if ((this.ClosedField.Equals(value) != true)) {
                    this.ClosedField = value;
                    this.RaisePropertyChanged("Closed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ClosingPrice {
            get {
                return this.ClosingPriceField;
            }
            set {
                if ((this.ClosingPriceField.Equals(value) != true)) {
                    this.ClosingPriceField = value;
                    this.RaisePropertyChanged("ClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentCost {
            get {
                return this.CurrentCostField;
            }
            set {
                if ((this.CurrentCostField.Equals(value) != true)) {
                    this.CurrentCostField = value;
                    this.RaisePropertyChanged("CurrentCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentMarketValue {
            get {
                return this.CurrentMarketValueField;
            }
            set {
                if ((this.CurrentMarketValueField.Equals(value) != true)) {
                    this.CurrentMarketValueField = value;
                    this.RaisePropertyChanged("CurrentMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPosition {
            get {
                return this.CurrentPositionField;
            }
            set {
                if ((this.CurrentPositionField.Equals(value) != true)) {
                    this.CurrentPositionField = value;
                    this.RaisePropertyChanged("CurrentPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentPrice {
            get {
                return this.CurrentPriceField;
            }
            set {
                if ((this.CurrentPriceField.Equals(value) != true)) {
                    this.CurrentPriceField = value;
                    this.RaisePropertyChanged("CurrentPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Delta {
            get {
                return this.DeltaField;
            }
            set {
                if ((this.DeltaField.Equals(value) != true)) {
                    this.DeltaField = value;
                    this.RaisePropertyChanged("Delta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DeltaUSD {
            get {
                return this.DeltaUSDField;
            }
            set {
                if ((this.DeltaUSDField.Equals(value) != true)) {
                    this.DeltaUSDField = value;
                    this.RaisePropertyChanged("DeltaUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Gamma {
            get {
                return this.GammaField;
            }
            set {
                if ((this.GammaField.Equals(value) != true)) {
                    this.GammaField = value;
                    this.RaisePropertyChanged("Gamma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> GammaUSD {
            get {
                return this.GammaUSDField;
            }
            set {
                if ((this.GammaUSDField.Equals(value) != true)) {
                    this.GammaUSDField = value;
                    this.RaisePropertyChanged("GammaUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ImpliedVol {
            get {
                return this.ImpliedVolField;
            }
            set {
                if ((this.ImpliedVolField.Equals(value) != true)) {
                    this.ImpliedVolField = value;
                    this.RaisePropertyChanged("ImpliedVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFuture {
            get {
                return this.IsFutureField;
            }
            set {
                if ((this.IsFutureField.Equals(value) != true)) {
                    this.IsFutureField = value;
                    this.RaisePropertyChanged("IsFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOption {
            get {
                return this.IsOptionField;
            }
            set {
                if ((this.IsOptionField.Equals(value) != true)) {
                    this.IsOptionField = value;
                    this.RaisePropertyChanged("IsOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOutOfBounds {
            get {
                return this.IsOutOfBoundsField;
            }
            set {
                if ((this.IsOutOfBoundsField.Equals(value) != true)) {
                    this.IsOutOfBoundsField = value;
                    this.RaisePropertyChanged("IsOutOfBounds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStock {
            get {
                return this.IsStockField;
            }
            set {
                if ((this.IsStockField.Equals(value) != true)) {
                    this.IsStockField = value;
                    this.RaisePropertyChanged("IsStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> LastPrice {
            get {
                return this.LastPriceField;
            }
            set {
                if ((this.LastPriceField.Equals(value) != true)) {
                    this.LastPriceField = value;
                    this.RaisePropertyChanged("LastPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Mid {
            get {
                return this.MidField;
            }
            set {
                if ((this.MidField.Equals(value) != true)) {
                    this.MidField = value;
                    this.RaisePropertyChanged("Mid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Multiplier {
            get {
                return this.MultiplierField;
            }
            set {
                if ((this.MultiplierField.Equals(value) != true)) {
                    this.MultiplierField = value;
                    this.RaisePropertyChanged("Multiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NettingAdjustment {
            get {
                return this.NettingAdjustmentField;
            }
            set {
                if ((this.NettingAdjustmentField.Equals(value) != true)) {
                    this.NettingAdjustmentField = value;
                    this.RaisePropertyChanged("NettingAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionType {
            get {
                return this.OptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionTypeField, value) != true)) {
                    this.OptionTypeField = value;
                    this.RaisePropertyChanged("OptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PandL {
            get {
                return this.PandLField;
            }
            set {
                if ((this.PandLField.Equals(value) != true)) {
                    this.PandLField = value;
                    this.RaisePropertyChanged("PandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PrevClose {
            get {
                return this.PrevCloseField;
            }
            set {
                if ((this.PrevCloseField.Equals(value) != true)) {
                    this.PrevCloseField = value;
                    this.RaisePropertyChanged("PrevClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SODMarketValue {
            get {
                return this.SODMarketValueField;
            }
            set {
                if ((this.SODMarketValueField.Equals(value) != true)) {
                    this.SODMarketValueField = value;
                    this.RaisePropertyChanged("SODMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SODPosition {
            get {
                return this.SODPositionField;
            }
            set {
                if ((this.SODPositionField.Equals(value) != true)) {
                    this.SODPositionField = value;
                    this.RaisePropertyChanged("SODPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SODPrice {
            get {
                return this.SODPriceField;
            }
            set {
                if ((this.SODPriceField.Equals(value) != true)) {
                    this.SODPriceField = value;
                    this.RaisePropertyChanged("SODPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StrikePrice {
            get {
                return this.StrikePriceField;
            }
            set {
                if ((this.StrikePriceField.Equals(value) != true)) {
                    this.StrikePriceField = value;
                    this.RaisePropertyChanged("StrikePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionStatus {
            get {
                return this.SubscriptionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionStatusField, value) != true)) {
                    this.SubscriptionStatusField = value;
                    this.RaisePropertyChanged("SubscriptionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Theta {
            get {
                return this.ThetaField;
            }
            set {
                if ((this.ThetaField.Equals(value) != true)) {
                    this.ThetaField = value;
                    this.RaisePropertyChanged("Theta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ThetaAnnualized {
            get {
                return this.ThetaAnnualizedField;
            }
            set {
                if ((this.ThetaAnnualizedField.Equals(value) != true)) {
                    this.ThetaAnnualizedField = value;
                    this.RaisePropertyChanged("ThetaAnnualized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TimePremium {
            get {
                return this.TimePremiumField;
            }
            set {
                if ((this.TimePremiumField.Equals(value) != true)) {
                    this.TimePremiumField = value;
                    this.RaisePropertyChanged("TimePremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnderlyingSymbol {
            get {
                return this.UnderlyingSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderlyingSymbolField, value) != true)) {
                    this.UnderlyingSymbolField = value;
                    this.RaisePropertyChanged("UnderlyingSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Vega {
            get {
                return this.VegaField;
            }
            set {
                if ((this.VegaField.Equals(value) != true)) {
                    this.VegaField = value;
                    this.RaisePropertyChanged("Vega");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> _100DeltaUSD {
            get {
                return this._100DeltaUSDField;
            }
            set {
                if ((this._100DeltaUSDField.Equals(value) != true)) {
                    this._100DeltaUSDField = value;
                    this.RaisePropertyChanged("_100DeltaUSD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SnapshotType", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    public enum SnapshotType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartOfTrading = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfTrading = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfDay = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Snapshot", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class Snapshot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SnapshotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.SnapshotType SnapshotTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SnapshotId {
            get {
                return this.SnapshotIdField;
            }
            set {
                if ((this.SnapshotIdField.Equals(value) != true)) {
                    this.SnapshotIdField = value;
                    this.RaisePropertyChanged("SnapshotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.SnapshotType SnapshotType {
            get {
                return this.SnapshotTypeField;
            }
            set {
                if ((this.SnapshotTypeField.Equals(value) != true)) {
                    this.SnapshotTypeField = value;
                    this.RaisePropertyChanged("SnapshotType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Blotter", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class Blotter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SentoniClient.SentoniServiceReference.Trade[] TradesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeDate {
            get {
                return this.TradeDateField;
            }
            set {
                if ((this.TradeDateField.Equals(value) != true)) {
                    this.TradeDateField = value;
                    this.RaisePropertyChanged("TradeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SentoniClient.SentoniServiceReference.Trade[] Trades {
            get {
                return this.TradesField;
            }
            set {
                if ((object.ReferenceEquals(this.TradesField, value) != true)) {
                    this.TradesField = value;
                    this.RaisePropertyChanged("Trades");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trade", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class Trade : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentMarketPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFutureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PandLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StrikePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnderlyingSymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentMarketPrice {
            get {
                return this.CurrentMarketPriceField;
            }
            set {
                if ((this.CurrentMarketPriceField.Equals(value) != true)) {
                    this.CurrentMarketPriceField = value;
                    this.RaisePropertyChanged("CurrentMarketPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFuture {
            get {
                return this.IsFutureField;
            }
            set {
                if ((this.IsFutureField.Equals(value) != true)) {
                    this.IsFutureField = value;
                    this.RaisePropertyChanged("IsFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOption {
            get {
                return this.IsOptionField;
            }
            set {
                if ((this.IsOptionField.Equals(value) != true)) {
                    this.IsOptionField = value;
                    this.RaisePropertyChanged("IsOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStock {
            get {
                return this.IsStockField;
            }
            set {
                if ((this.IsStockField.Equals(value) != true)) {
                    this.IsStockField = value;
                    this.RaisePropertyChanged("IsStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Multiplier {
            get {
                return this.MultiplierField;
            }
            set {
                if ((this.MultiplierField.Equals(value) != true)) {
                    this.MultiplierField = value;
                    this.RaisePropertyChanged("Multiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionType {
            get {
                return this.OptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionTypeField, value) != true)) {
                    this.OptionTypeField = value;
                    this.RaisePropertyChanged("OptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PandL {
            get {
                return this.PandLField;
            }
            set {
                if ((this.PandLField.Equals(value) != true)) {
                    this.PandLField = value;
                    this.RaisePropertyChanged("PandL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StrikePrice {
            get {
                return this.StrikePriceField;
            }
            set {
                if ((this.StrikePriceField.Equals(value) != true)) {
                    this.StrikePriceField = value;
                    this.RaisePropertyChanged("StrikePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeDateTime {
            get {
                return this.TradeDateTimeField;
            }
            set {
                if ((this.TradeDateTimeField.Equals(value) != true)) {
                    this.TradeDateTimeField = value;
                    this.RaisePropertyChanged("TradeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeId {
            get {
                return this.TradeIdField;
            }
            set {
                if ((this.TradeIdField.Equals(value) != true)) {
                    this.TradeIdField = value;
                    this.RaisePropertyChanged("TradeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeSource {
            get {
                return this.TradeSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeSourceField, value) != true)) {
                    this.TradeSourceField = value;
                    this.RaisePropertyChanged("TradeSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeType {
            get {
                return this.TradeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeTypeField, value) != true)) {
                    this.TradeTypeField = value;
                    this.RaisePropertyChanged("TradeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnderlyingSymbol {
            get {
                return this.UnderlyingSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderlyingSymbolField, value) != true)) {
                    this.UnderlyingSymbolField = value;
                    this.RaisePropertyChanged("UnderlyingSymbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradingSchedule", Namespace="http://schemas.datacontract.org/2004/07/SentoniServiceLib")]
    [System.SerializableAttribute()]
    public partial class TradingSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EndOfDaySnapshotTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EndOfTradingSnapshotTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan EndTradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinutesToTradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan NextTradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartOfTradingSnapshotTakenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EndOfDaySnapshotTaken {
            get {
                return this.EndOfDaySnapshotTakenField;
            }
            set {
                if ((this.EndOfDaySnapshotTakenField.Equals(value) != true)) {
                    this.EndOfDaySnapshotTakenField = value;
                    this.RaisePropertyChanged("EndOfDaySnapshotTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EndOfTradingSnapshotTaken {
            get {
                return this.EndOfTradingSnapshotTakenField;
            }
            set {
                if ((this.EndOfTradingSnapshotTakenField.Equals(value) != true)) {
                    this.EndOfTradingSnapshotTakenField = value;
                    this.RaisePropertyChanged("EndOfTradingSnapshotTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan EndTradeTime {
            get {
                return this.EndTradeTimeField;
            }
            set {
                if ((this.EndTradeTimeField.Equals(value) != true)) {
                    this.EndTradeTimeField = value;
                    this.RaisePropertyChanged("EndTradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinutesToTrade {
            get {
                return this.MinutesToTradeField;
            }
            set {
                if ((this.MinutesToTradeField.Equals(value) != true)) {
                    this.MinutesToTradeField = value;
                    this.RaisePropertyChanged("MinutesToTrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan NextTradeTime {
            get {
                return this.NextTradeTimeField;
            }
            set {
                if ((this.NextTradeTimeField.Equals(value) != true)) {
                    this.NextTradeTimeField = value;
                    this.RaisePropertyChanged("NextTradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartOfTradingSnapshotTaken {
            get {
                return this.StartOfTradingSnapshotTakenField;
            }
            set {
                if ((this.StartOfTradingSnapshotTakenField.Equals(value) != true)) {
                    this.StartOfTradingSnapshotTakenField = value;
                    this.RaisePropertyChanged("StartOfTradingSnapshotTaken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SentoniServiceReference.ISentoniService", CallbackContract=typeof(SentoniClient.SentoniServiceReference.ISentoniServiceCallback))]
    public interface ISentoniService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentoniService/HeartBeat", ReplyAction="http://tempuri.org/ISentoniService/HeartBeatResponse")]
        bool HeartBeat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentoniService/HeartBeat", ReplyAction="http://tempuri.org/ISentoniService/HeartBeatResponse")]
        System.Threading.Tasks.Task<bool> HeartBeatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentoniService/GetAccountList", ReplyAction="http://tempuri.org/ISentoniService/GetAccountListResponse")]
        string[] GetAccountList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentoniService/GetAccountList", ReplyAction="http://tempuri.org/ISentoniService/GetAccountListResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountListAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetAccountSummaries")]
        void GetAccountSummaries();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetAccountSummaries")]
        System.Threading.Tasks.Task GetAccountSummariesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetPortfolio")]
        void GetPortfolio(string acctName, bool bPositionsForAllAccounts);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetPortfolio")]
        System.Threading.Tasks.Task GetPortfolioAsync(string acctName, bool bPositionsForAllAccounts);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetPortfolioSnapshot")]
        void GetPortfolioSnapshot(short snapshotId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetPortfolioSnapshot")]
        System.Threading.Tasks.Task GetPortfolioSnapshotAsync(short snapshotId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetBlotter")]
        void GetBlotter(string acctName, System.DateTime tradeDate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetBlotter")]
        System.Threading.Tasks.Task GetBlotterAsync(string acctName, System.DateTime tradeDate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetTradingSchedule")]
        void GetTradingSchedule();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/GetTradingSchedule")]
        System.Threading.Tasks.Task GetTradingScheduleAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/TakeSnapshot")]
        void TakeSnapshot(string acctName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/TakeSnapshot")]
        System.Threading.Tasks.Task TakeSnapshotAsync(string acctName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/SwitchQuoteFeed")]
        void SwitchQuoteFeed(string hostName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/SwitchQuoteFeed")]
        System.Threading.Tasks.Task SwitchQuoteFeedAsync(string hostName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISentoniServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/PostAccountSummaries")]
        void PostAccountSummaries(SentoniClient.SentoniServiceReference.AccountSummary[] accountSummaries);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/PostPortfolio")]
        void PostPortfolio(SentoniClient.SentoniServiceReference.Portfolio portfolio);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/PostBlotter")]
        void PostBlotter(SentoniClient.SentoniServiceReference.Blotter blotter);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISentoniService/PostTradingSchedule")]
        void PostTradingSchedule(SentoniClient.SentoniServiceReference.TradingSchedule[] tradingSchedule);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISentoniServiceChannel : SentoniClient.SentoniServiceReference.ISentoniService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SentoniServiceClient : System.ServiceModel.DuplexClientBase<SentoniClient.SentoniServiceReference.ISentoniService>, SentoniClient.SentoniServiceReference.ISentoniService {
        
        public SentoniServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SentoniServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SentoniServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SentoniServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SentoniServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool HeartBeat() {
            return base.Channel.HeartBeat();
        }
        
        public System.Threading.Tasks.Task<bool> HeartBeatAsync() {
            return base.Channel.HeartBeatAsync();
        }
        
        public string[] GetAccountList() {
            return base.Channel.GetAccountList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountListAsync() {
            return base.Channel.GetAccountListAsync();
        }
        
        public void GetAccountSummaries() {
            base.Channel.GetAccountSummaries();
        }
        
        public System.Threading.Tasks.Task GetAccountSummariesAsync() {
            return base.Channel.GetAccountSummariesAsync();
        }
        
        public void GetPortfolio(string acctName, bool bPositionsForAllAccounts) {
            base.Channel.GetPortfolio(acctName, bPositionsForAllAccounts);
        }
        
        public System.Threading.Tasks.Task GetPortfolioAsync(string acctName, bool bPositionsForAllAccounts) {
            return base.Channel.GetPortfolioAsync(acctName, bPositionsForAllAccounts);
        }
        
        public void GetPortfolioSnapshot(short snapshotId) {
            base.Channel.GetPortfolioSnapshot(snapshotId);
        }
        
        public System.Threading.Tasks.Task GetPortfolioSnapshotAsync(short snapshotId) {
            return base.Channel.GetPortfolioSnapshotAsync(snapshotId);
        }
        
        public void GetBlotter(string acctName, System.DateTime tradeDate) {
            base.Channel.GetBlotter(acctName, tradeDate);
        }
        
        public System.Threading.Tasks.Task GetBlotterAsync(string acctName, System.DateTime tradeDate) {
            return base.Channel.GetBlotterAsync(acctName, tradeDate);
        }
        
        public void GetTradingSchedule() {
            base.Channel.GetTradingSchedule();
        }
        
        public System.Threading.Tasks.Task GetTradingScheduleAsync() {
            return base.Channel.GetTradingScheduleAsync();
        }
        
        public void TakeSnapshot(string acctName) {
            base.Channel.TakeSnapshot(acctName);
        }
        
        public System.Threading.Tasks.Task TakeSnapshotAsync(string acctName) {
            return base.Channel.TakeSnapshotAsync(acctName);
        }
        
        public void SwitchQuoteFeed(string hostName) {
            base.Channel.SwitchQuoteFeed(hostName);
        }
        
        public System.Threading.Tasks.Task SwitchQuoteFeedAsync(string hostName) {
            return base.Channel.SwitchQuoteFeedAsync(hostName);
        }
    }
}
